#!/usr/bin/env bash
set -e

TOOLKIT_VERSION="1.15.3"

if [ ! -d "./nifi_toolkit" ] 
then
    if [ ! -f ./nifi-toolkit-$TOOLKIT_VERSION-bin.zip ]; then
        wget https://dlcdn.apache.org/nifi/$TOOLKIT_VERSION/nifi-toolkit-$TOOLKIT_VERSION-bin.zip
    fi
    unzip nifi-toolkit-$TOOLKIT_VERSION-bin.zip
    mv nifi-toolkit-$TOOLKIT_VERSION nifi_toolkit
    rm nifi-toolkit-$TOOLKIT_VERSION-bin.zip
fi

# MORE INFO ON THE TOOLKIT : https://nifi.apache.org/docs/nifi-docs/components/nifi-docs/html/toolkit-guide.html#tls_toolkit
# The default value is 1095 days.
CERTIFICATE_TIME_VAILIDITY_IN_DAYS=2460 

# IMPORTANT: ENSURES THAT ONLY THE PASSWORD/KEYSTORE PROPERTIES ARE UPDATED, it takes the original nifi.props and overwrites the password/trustkeystore props with the new ones generated by the tool.
PATH_TO_NIFI_PROPERTIES_FILE="./../nifi/conf/nifi.properties"

# -k, --keySize <arg> Number of bits for generated keys (default: 2048)
KEY_SIZE=4096

# -n, --hostnames <arg> Comma separated list of hostnames i.e "server1,server2,localhost" etc.
HOSTNAME_1="localhost"

OUTPUT_DIRECTORY="./nifi_certificates"

# -C,--clientCertDn <arg> Generate client certificate suitable for use in browser with specified DN (Can be specified multiple times)
# this should respect whatever is used to generate the other certificate with regards CN=nifi, this needs to match the HOSTNAME of the nifi container(s)
SUBJ_LINE_CERTIFICATE_CN="C=UK/ST=UK/L=UK/O=cogstack/OU=cogstack/CN=cogstack"

# Overwite existing files use the "-O" flag.
bash nifi_toolkit/bin/tls-toolkit.sh standalone -k $KEY_SIZE -n $HOSTNAME_1 -o $OUTPUT_DIRECTORY -O -f $PATH_TO_NIFI_PROPERTIES_FILE -d $CERTIFICATE_TIME_VAILIDITY_IN_DAYS -C $SUBJ_LINE_CERTIFICATE_CN 

mv ./$OUTPUT_DIRECTORY/$HOSTNAME_1/nifi.properties ../nifi/conf/
