version: '3.5'
# need version '3.5' for setting external networks name

#---------------------------------------------------------------------------#
# Used services                                                             #
#---------------------------------------------------------------------------#
services:

#---------------------------------------------------------------------------#
# Postgres container with sample data                                       #
#---------------------------------------------------------------------------#
  samples-db:
    image: postgres:11.4-alpine
    volumes:
      # mapping the proper timezone
      #- /etc/timezone:/etc/timezone:ro
      # mapping postgres data
      - ./services/pgsamples/db_dump/db_samples-pdf-text-small.sql.gz:/data/db_samples.sql.gz:ro
      - ./services/pgsamples/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh:ro
      - samples-vol:/var/lib/postgresql/data
    #ports:
    # <host:container> expose the postgres DB to host for debugging purposes
    #  - 5555:5432
    networks:
      - cognet


#---------------------------------------------------------------------------#
# Apache Tika documents processing service                                  #
#---------------------------------------------------------------------------#
  tika-service:
    image: cogstacksystems/tika-service:latest
    volumes:
      - ./services/tika-service/config:/app/config:ro
    networks:
      - cognet


#---------------------------------------------------------------------------#
# NLP Service related containers                                            #
#---------------------------------------------------------------------------#
  nlp-gate-bioyodie:
    image: lrog/nlp-rest-service-bioyodie:local
    volumes:
      # configuration files
      - ./services/nlp-services/applications/bio-yodie/config:/app/nlp-service/config:ro
      # UMLS resources
      - ${RES_BIOYODIE_UMLS_PATH}:/gate/app/bioyodie/bio-yodie-resources:ro
    command: "bash /app/nlp-service/run.sh"
    networks:
      - cognet

  nlp-medcat-umls:
    image: cogstacksystems/medcatservice:latest
    env_file:
      - ./services/nlp-services/applications/cat/envs/env_fullumls
    volumes:
      # UMLS models
      - ${RES_CAT_UMLS_PATH}/cdb.dat:/cat/models/cdb.dat:ro
      - ${RES_CAT_UMLS_PATH}/vcb.dat:/cat/models/vcb.dat:ro
    networks:
      - cognet


#---------------------------------------------------------------------------#
# ElasticSearch cluster                                                     #
#---------------------------------------------------------------------------#
  elasticsearch-1:
    image: amazon/opendistro-for-elasticsearch:0.8.0
    #container_name: elasticsearch-1
    restart: always
    environment:
      - cluster.name=docker-cluster
      - discovery.type=single-node
      # - discovery.type=zen
      - bootstrap.memory_lock=true
      # recommended to set both to 50% of system RAM
      - "ES_JAVA_OPTS=-Xms1G -Xmx1G"
    volumes:
      # mapping the proper timezone
      #- /etc/timezone:/etc/timezone:ro
      # mapping security config
      - ./security/root-ca.pem:/usr/share/elasticsearch/config/root-ca.pem:ro
      - ./security/es-node1.pem:/usr/share/elasticsearch/config/esnode.pem:ro
      - ./security/es-node1.key:/usr/share/elasticsearch/config/esnode.key:ro
      - ./security/internal_users.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml:ro
      # configuration
      - ./services/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      # volumes
      - elasticsearch-vol-1:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    #ports:
      #- 9200:9200
      #- 9600:9600
    #expose:
    #  - 9200
    #  - 9600
    networks:
      - esnet


#---------------------------------------------------------------------------#
# Kibana webapp                                                             #
#---------------------------------------------------------------------------#
  kibana:
    image: amazon/opendistro-for-elasticsearch-kibana:0.8.0
    restart: always
    environment:
      ELASTICSEARCH_URL: http://elasticsearch-1:9200
      SERVER_SSL_KEY: /usr/share/kibana/config/kibana.key
      SERVER_SSL_CERTIFICATE: /usr/share/kibana/config/kibana.pem
    depends_on:
      - elasticsearch-1
    volumes:
      # mapping the proper timezone
      #- /etc/timezone:/etc/timezone:ro
      # mapping kibana config
      - ./security/root-ca.pem:/usr/share/kibana/config/root-ca.pem:ro
      - ./security/kibana.pem:/usr/share/kibana/config/kibana.pem:ro
      - ./security/kibana.key:/usr/share/kibana/config/kibana.key:ro
    #ports:
      #- 5601:5601
    #expose:
    #  - 5601
    networks:
      - esnet


#---------------------------------------------------------------------------#
# NiFi webapp                                                               #
#---------------------------------------------------------------------------#
  nifi:
    image: cogstacksystems/cogstack-nifi:latest
    #build:
    #  ./nifi/
    restart: always
    volumes:
      # mapping the proper timezone
      #- /etc/timezone:/etc/timezone:ro
      # mapping nifi content from local host -- templates and scripts
      #- ./nifi/user-templates:/opt/nifi/nifi-current/conf/templates
      #- ./nifi/user-scripts:/opt/nifi/user-scripts
      # mapping custom user scripts
      - ./nifi/devel/user-scripts:/devel/user-scripts
      # note: configuration can be only provided in custom image
      - ./nifi/security:/opt/nifi/security:ro
      # rest of volumes to preserve the state
      - nifi-vol-conf:/opt/nifi/nifi-current/conf
      - nifi-vol-logs:/opt/nifi/nifi-current/logs
      - nifi-vol-provenance:/opt/nifi/nifi-current/provenance_repository
      - nifi-vol-database:/opt/nifi/nifi-current/database_repository
      - nifi-vol-flowfiles:/opt/nifi/nifi-current/flowfile_repository
      - nifi-vol-content:/opt/nifi/nifi-current/content_repository
      # errors generated during data processing
      - nifi-vol-errors:/opt/nifi/pipeline/flowfile-errors
    #ports:
      #- "8090:8080"
      #- "8080:8080"
    #expose:
    #  - 8080
    #  - 10000 # site-to-site functionality 
    networks:
      - cognet
      - esnet


#---------------------------------------------------------------------------#
# Docker named volumes                                                      #
#---------------------------------------------------------------------------#
volumes:
  samples-vol:
    driver: local
  # ELK-stack related
  elasticsearch-vol-1:
    driver: local
  # NiFi related
  nifi-vol-conf:
    driver: local
  nifi-vol-logs:
    driver: local
  nifi-vol-provenance:
    driver: local
  nifi-vol-database:
    driver: local
  nifi-vol-flowfiles:
    driver: local
  nifi-vol-content:
    driver: local
  nifi-vol-errors:
    driver: local


#---------------------------------------------------------------------------#
# Docker networks.                                                          #
#---------------------------------------------------------------------------#
networks:
  cognet:
    driver: bridge
  esnet:
    driver: bridge
    name: esnet-ext
