#---------------------------------------------------------------------------#
# Used services                                                             #
#---------------------------------------------------------------------------#
services:

#---------------------------------------------------------------------------#
# Postgres container with sample data                                       #
#---------------------------------------------------------------------------#
  samples-db:
    image: postgres:17.5-alpine
    container_name: cogstack-samples-db
    shm_size: 128mb
    restart: always
    env_file:
      - ./database.env
      - ../security/env/users_database.env
    environment:
      # PG env vars
      - POSTGRES_USER=${POSTGRES_USER_SAMPLES:-test}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_SAMPLES:-test}
    volumes:
      # mapping postgres data dump and initialization
      - ../services/pgsamples/db_dump:/data/db_dump:rw
      - ../services/pgsamples/schemas:/data/schemas:rw
      - ../services/pgsamples/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh:ro
      # data persistence
      - samples-vol:/var/lib/postgresql/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    command: postgres -c "max_connections=${POSTGRES_DB_MAX_CONNECTIONS:-100}"
    ports:
    # <host:container> expose the postgres DB to host for debugging purposes
      - 5554:5432
    expose:
      - 5432
    networks:
      - cognet

#---------------------------------------------------------------------------#
# CogStack Databank / Cogstack-DB, production database                      #
#---------------------------------------------------------------------------#
  cogstack-databank-db:
    image: postgres:17.5-alpine
    container_name: cogstack-production-databank-db
    shm_size: 1g
    restart: always
    env_file:
      - ./database.env
      - ../security/env/users_database.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-admin}
      - POSTGRES_DATABANK_DB=${POSTGRES_DATABANK_DB:-cogstack}
    volumes:
      # mapping postgres data dump and initialization
      - ../services/cogstack-db/pgsql/schemas:/data/:ro
      - ../services/cogstack-db/pgsql/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh:ro
      # data persistence
      - databank-vol:/var/lib/postgresql/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 262144
    command: postgres -c "max_connections=${POSTGRES_DB_MAX_CONNECTIONS:-100}"
    ports:
    # <host:container> expose the postgres DB to host for debugging purposes
      - 5556:5432
    expose:
      - 5432
    networks:
      - cognet
  
  cogstack-databank-db-mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: cogstack-production-databank-db-mssql
    shm_size: 1g
    restart: always
    env_file:
      - ./database.env
      - ../security/env/users_database.env
    environment:
      - ACCEPT_EULA=y
      - MSSQL_SA_USER=${MSSQL_SA_USER:-sa}
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD:-admin!COGSTACK2022}
    volumes:
      # mapping postgres data dump and initialization
      - ../services/cogstack-db/mssql/schemas:/data/:ro
      - ../services/cogstack-db/mssql/init_db.sh:/usr/src/app/init_db.sh:ro
      # data persistence
      - databank-vol:/var/opt/mssql
    entrypoint: "nohup bash -c '/usr/src/app/init_db.sh'"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 262144
    ports:
    # <host:container> expose the postgres DB to host for debugging purposes
      - 1433:1433
    networks:
      - cognet

#---------------------------------------------------------------------------#
# ElasticSearch cluster                                                     #
#---------------------------------------------------------------------------#
  es_native_create_certs:
    container_name: es_create_certs
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.2
    env_file:
      - ../security/env/users_elasticsearch.env
      - ../security/env/certificates_elasticsearch.env
    command: bash -c "bash /usr/share/elasticsearch/es_native_cert_generator.sh"
    stdin_open: true 
    tty: true
    user: "0"
    working_dir: /usr/share/elasticsearch
    volumes:
      - ../security/scripts/es_native_cert_generator.sh:/usr/share/elasticsearch/es_native_cert_generator.sh:ro
      - ../security/certificates/elastic/elasticsearch:/usr/share/elasticsearch/config/certificates:rw
      - elasticsearch-certs-vol:/certs

  elasticsearch-1:
    image: ${ELASTICSEARCH_DOCKER_IMAGE:-opensearchproject/opensearch:3.2.0}
    container_name: elasticsearch-1
    shm_size : 1g
    restart: always
    env_file:
      - ./network_settings.env
      - ./elasticsearch.env
      - ../security/env/users_elasticsearch.env
    environment:
      # CLUSTER CONFIGS
      - node.name=${ELASTICSEARCH_NODE_1_NAME:-es01}
      - cluster.name=${ELASTICSEARCH_CLUSTER_NAME:-"elasticsearch-cogstack-cluster"}
      - discovery.type=zen
      # OTHER SETTINGS
      - bootstrap.memory_lock=${ELASTICSEARCH_BOOTSTRAP_MEMORY_LOCK:-true} 
      - "ES_JAVA_OPTS=${ELASTICSEARCH_JAVA_OPTS:--Xms2048m -Xmx2048m -Des.failure_store_feature_flag_enabled=true}"
      - "OPENSEARCH_JAVA_OPTS=${ELASTICSEARCH_JAVA_OPTS:--Xms2048m -Xmx2048m -Des.failure_store_feature_flag_enabled=true}"

      # User config:
      - ELASTIC_USER=${ELASTIC_USER:-elastic}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-kibanaserver}
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${ES_ADMIN_PASS:-admin}
      - logger.level=${ELASTICSEARCH_LOG_LEVEL:-INFO}

      # global env vars from elasticsearch.env
      - ELASTICSEARCH_VERSION=${ELASTICSEARCH_VERSION:-opensearch}

    volumes:
      # INFO: ES configuration mapped via volume, adaptie with env var
      - ../services/elasticsearch/config/${ELASTICSEARCH_VERSION:-opensearch}.yml:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/${ELASTICSEARCH_VERSION:-opensearch}.yml:ro
      - ../services/elasticsearch/config/log4j2_${ELASTICSEARCH_VERSION:-opensearch}.properties:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/log4j2.properties:ro

      # certificate file mapping, depends on ${ELASTICSEARCH_VERSION:-opensearch} env var
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elastic-stack-ca.crt.pem:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/root-ca.crt:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elastic-stack-ca.key.pem:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/root-ca.key:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/${ES_INSTANCE_NAME_1:-elasticsearch-1}.p12:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/esnode.p12:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/${ES_INSTANCE_NAME_1:-elasticsearch-1}.crt:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/esnode.crt:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/${ES_INSTANCE_NAME_1:-elasticsearch-1}.key:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/esnode.key:ro

      # OPENSEARCH specific certificates, these are not used in native ES deployments, but they are mounted anyways
      - ../security/certificates/elastic/opensearch/admin.crt:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/admin.crt:ro
      - ../security/certificates/elastic/opensearch/admin.key.pem:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/admin.key.pem:ro

      # ES native roles
      - ../security/es_roles/elasticsearch/role_mapping.yml:/usr/share/elasticsearch/config/role_mapping.yml:ro
      - ../security/es_roles/elasticsearch/roles.yml:/usr/share/elasticsearch/config/roles.yml:ro

      # opensearch only
      - ../security/es_roles/opensearch/config.yml:/usr/share/opensearch/config/opensearch-security/config.yml:ro
      - ../security/es_roles/opensearch/internal_users.yml:/usr/share/opensearch/config/opensearch-security/internal_users.yml:ro
      - ../security/es_roles/opensearch/roles_mapping.yml:/usr/share/opensearch/config/opensearch-security/roles_mapping.yml:ro
      - ../security/es_roles/opensearch/roles.yml:/usr/share/opensearch/config/opensearch-security/roles.yml:ro

      # VM settings
      - ../services/elasticsearch/sysctl.conf:/etc/sysctl.conf:ro 
     
      # ES data persistence
      - ${ELASTICSEARCH_NODE_1_DATA_VOL_NAME:-elasticsearch-vol-1}:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/data

      # ES logs
      - ${ELASTICSEARCH_NODE_1_LOG_VOL_NAME:-elasticsearch-vol-log-1}:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/logs

      # ES snapshot backups
      - ${ELASTICSEARCH_BACKUP_PARTITION_FULL:-../data/es_snapshot_backups/full_backup}:/mnt/es_data_backups:rw
      - ${ELASTICSEARCH_BACKUP_PARTITION_CONFIG:-../data/es_snapshot_backups/config_backup}:/mnt/es_config_backups:rw

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 262144
    ports:
      - "${ELASTICSEARCH_NODE_1_OUTPUT_PORT:-9200}:9200"
      - "${ELASTICSEARCH_NODE_1_COMM_OUTPUT_PORT:-9300}:9300"
      - "${ELASTICSEARCH_NODE_1_ANALYZER_OUTPUT_PORT:-9600}:9600" # required for Performance Analyzer
    expose:
      - 9200
      - 9300
      - 9600
    networks:
      - cognet
    extra_hosts:
      - ${ELASTICSEARCH_1_HOST_NAME:-test-1:0.0.0.0}
      - ${ELASTICSEARCH_2_HOST_NAME:-test-2:0.0.0.0}
      - ${ELASTICSEARCH_3_HOST_NAME:-test-3:0.0.0.0}
      - ${KIBANA_HOST_NAME:-test-4:0.0.0.0}
      - ${NIFI_HOST_NAME:-test-5:0.0.0.0}

  elasticsearch-2:
    image: ${ELASTICSEARCH_DOCKER_IMAGE:-opensearchproject/opensearch:3.2.0}
    container_name: elasticsearch-2
    shm_size : 1g
    restart: always
    env_file:
      - ./network_settings.env
      - ./elasticsearch.env
      - ../security/env/users_elasticsearch.env
    environment:
      # CLUSTER CONFIGS
      - node.name=${ELASTICSEARCH_NODE_2_NAME:-"es02"}
      - cluster.name=${ELASTICSEARCH_CLUSTER_NAME:-"elasticsearch-cogstack-cluster"}
      - discovery.type=zen
      # OTHER SETTINGS
      - bootstrap.memory_lock=${ELASTICSEARCH_BOOTSTRAP_MEMORY_LOCK:-true} 
      - "ES_JAVA_OPTS=${ELASTICSEARCH_JAVA_OPTS:--Xms2048m -Xmx2048m -Des.failure_store_feature_flag_enabled=true}"
      - "OPENSEARCH_JAVA_OPTS=${ELASTICSEARCH_JAVA_OPTS:--Xms2048m -Xmx2048m -Des.failure_store_feature_flag_enabled=true}"

      # User config:
      - ELASTIC_USER=${ELASTIC_USER:-elastic}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-kibanaserver}
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${ES_ADMIN_PASS:-admin}
      - logger.level=${ELASTICSEARCH_LOG_LEVEL:-INFO}

      # global env vars from elasticsearch.env
      - ELASTICSEARCH_VERSION=${ELASTICSEARCH_VERSION:-opensearch}
      
    volumes:
      # INFO: ES configuration mapped via volume, adaptie with env var
      - ../services/elasticsearch/config/${ELASTICSEARCH_VERSION:-opensearch}.yml:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/${ELASTICSEARCH_VERSION:-opensearch}.yml:ro
      - ../services/elasticsearch/config/log4j2_${ELASTICSEARCH_VERSION:-opensearch}.properties:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/log4j2.properties:ro

      # certificate file mapping, depends on ${ELASTICSEARCH_VERSION:-opensearch} env var
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elastic-stack-ca.crt.pem:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/root-ca.crt:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elastic-stack-ca.key.pem:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/root-ca.key:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/${ES_INSTANCE_NAME_2:-elasticsearch-2}.p12:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/esnode.p12:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/${ES_INSTANCE_NAME_2:-elasticsearch-2}.crt:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/esnode.crt:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/${ES_INSTANCE_NAME_2:-elasticsearch-2}.key:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/esnode.key:ro

      # OPENSEARCH specific certificates, these are not used in native ES deployments, but they are mounted anyways
      - ../security/certificates/elastic/opensearch/admin.crt:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/admin.crt:ro
      - ../security/certificates/elastic/opensearch/admin.key.pem:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/admin.key.pem:ro

      # ES native roles
      - ../security/es_roles/elasticsearch/role_mapping.yml:/usr/share/elasticsearch/config/role_mapping.yml:ro
      - ../security/es_roles/elasticsearch/roles.yml:/usr/share/elasticsearch/config/roles.yml:ro

      # opensearch only
      - ../security/es_roles/opensearch/config.yml:/usr/share/opensearch/config/opensearch-security/config.yml:ro
      - ../security/es_roles/opensearch/internal_users.yml:/usr/share/opensearch/config/opensearch-security/internal_users.yml:ro
      - ../security/es_roles/opensearch/roles_mapping.yml:/usr/share/opensearch/config/opensearch-security/roles_mapping.yml:ro
      - ../security/es_roles/opensearch/roles.yml:/usr/share/opensearch/config/opensearch-security/roles.yml:ro

      # VM settings
      - ../services/elasticsearch/sysctl.conf:/etc/sysctl.conf:ro 
     
      # ES data persistence
      - ${ELASTICSEARCH_NODE_2_DATA_VOL_NAME:-elasticsearch-vol-2}:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/data

      # ES logs
      - ${ELASTICSEARCH_NODE_2_LOG_VOL_NAME:-elasticsearch-vol-log-2}:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/logs

      # ES snapshot backups
      - ${ELASTICSEARCH_BACKUP_PARTITION_FULL:-../data/es_snapshot_backups/full_backup}:/mnt/es_data_backups:rw
      - ${ELASTICSEARCH_BACKUP_PARTITION_CONFIG:-../data/es_snapshot_backups/config_backup}:/mnt/es_config_backups:rw

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 262144
    ports:
      - "${ELASTICSEARCH_NODE_2_OUTPUT_PORT:-9201}:9200"
      - "${ELASTICSEARCH_NODE_2_COMM_OUTPUT_PORT:-9301}:9300"
      - "${ELASTICSEARCH_NODE_2_ANALYZER_OUTPUT_PORT:-9601}:9600" # required for Performance Analyzer
    expose:
      - 9200
      - 9300
      - 9600
    networks:
      - cognet
    extra_hosts:
      - ${ELASTICSEARCH_1_HOST_NAME:-test-1:0.0.0.0}
      - ${ELASTICSEARCH_2_HOST_NAME:-test-2:0.0.0.0}
      - ${ELASTICSEARCH_3_HOST_NAME:-test-3:0.0.0.0}
      - ${KIBANA_HOST_NAME:-test-4:0.0.0.0}
      - ${NIFI_HOST_NAME:-test-5:0.0.0.0}

  elasticsearch-3:
    image: ${ELASTICSEARCH_DOCKER_IMAGE:-opensearchproject/opensearch:3.2.0}
    container_name: elasticsearch-3
    shm_size : 1g
    restart: always
    env_file:
      - ./network_settings.env
      - ./elasticsearch.env
      - ../security/env/users_elasticsearch.env
    environment:
      # CLUSTER CONFIGS
      - node.name=${ELASTICSEARCH_NODE_3_NAME:-"es03"}
      - cluster.name=${ELASTICSEARCH_CLUSTER_NAME:-"elasticsearch-cogstack-cluster"}
      - discovery.type=zen
      # OTHER SETTINGS
      - bootstrap.memory_lock=${ELASTICSEARCH_BOOTSTRAP_MEMORY_LOCK:-true} 
      - "ES_JAVA_OPTS=${ELASTICSEARCH_JAVA_OPTS:--Xms2048m -Xmx2048m -Des.failure_store_feature_flag_enabled=true}"
      - "OPENSEARCH_JAVA_OPTS=${ELASTICSEARCH_JAVA_OPTS:--Xms2048m -Xmx2048m -Des.failure_store_feature_flag_enabled=true}"

      # User config:
      - ELASTIC_USER=${ELASTIC_USER:-elastic}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-kibanaserver}
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${ES_ADMIN_PASS:-admin}
      - logger.level=${ELASTICSEARCH_LOG_LEVEL:-INFO}

      # global env vars from elasticsearch.env
      - ELASTICSEARCH_VERSION=${ELASTICSEARCH_VERSION:-opensearch}
      
    volumes:
      # INFO: ES configuration mapped via volume, adaptie with env var
      - ../services/elasticsearch/config/${ELASTICSEARCH_VERSION:-opensearch}.yml:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/${ELASTICSEARCH_VERSION:-opensearch}.yml:ro
      - ../services/elasticsearch/config/log4j2_${ELASTICSEARCH_VERSION:-opensearch}.properties:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/log4j2.properties:ro

      # certificate file mapping, depends on ${ELASTICSEARCH_VERSION:-opensearch} env var
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elastic-stack-ca.crt.pem:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/root-ca.crt:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elastic-stack-ca.key.pem:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/root-ca.key:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/${ES_INSTANCE_NAME_3:-elasticsearch-3}.p12:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/esnode.p12:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/${ES_INSTANCE_NAME_3:-elasticsearch-3}.crt:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/esnode.crt:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/${ES_INSTANCE_NAME_3:-elasticsearch-3}.key:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/esnode.key:ro

      # OPENSEARCH specific certificates, these are not used in native ES deployments, but they are mounted anyways
      - ../security/certificates/elastic/opensearch/admin.crt:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/admin.crt:ro
      - ../security/certificates/elastic/opensearch/admin.key.pem:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/config/admin.key.pem:ro

      # ES native roles
      - ../security/es_roles/elasticsearch/role_mapping.yml:/usr/share/elasticsearch/config/role_mapping.yml:ro
      - ../security/es_roles/elasticsearch/roles.yml:/usr/share/elasticsearch/config/roles.yml:ro

      # opensearch only
      - ../security/es_roles/opensearch/config.yml:/usr/share/opensearch/config/opensearch-security/config.yml:ro
      - ../security/es_roles/opensearch/internal_users.yml:/usr/share/opensearch/config/opensearch-security/internal_users.yml:ro
      - ../security/es_roles/opensearch/roles_mapping.yml:/usr/share/opensearch/config/opensearch-security/roles_mapping.yml:ro
      - ../security/es_roles/opensearch/roles.yml:/usr/share/opensearch/config/opensearch-security/roles.yml:ro

      # VM settings
      - ../services/elasticsearch/sysctl.conf:/etc/sysctl.conf:ro 
     
      # ES data persistence
      - ${ELASTICSEARCH_NODE_3_DATA_VOL_NAME:-elasticsearch-vol-3}:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/data

      # ES logs
      - ${ELASTICSEARCH_NODE_3_LOG_VOL_NAME:-elasticsearch-vol-log-3}:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/logs

      # ES snapshot backups
      - ${ELASTICSEARCH_BACKUP_PARTITION_FULL:-../data/es_snapshot_backups/full_backup}:/mnt/es_data_backups:rw
      - ${ELASTICSEARCH_BACKUP_PARTITION_CONFIG:-../data/es_snapshot_backups/config_backup}:/mnt/es_config_backups:rw

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 262144
    ports:
      - "${ELASTICSEARCH_NODE_3_OUTPUT_PORT:-9202}:9200"
      - "${ELASTICSEARCH_NODE_3_COMM_OUTPUT_PORT:-9302}:9300"
      - "${ELASTICSEARCH_NODE_3_ANALYZER_OUTPUT_PORT:-9602}:9600" # required for Performance Analyzer
    expose:
      - 9200
      - 9300
      - 9600
    networks:
      - cognet
    extra_hosts:
      - ${ELASTICSEARCH_1_HOST_NAME:-test-1:0.0.0.0}
      - ${ELASTICSEARCH_2_HOST_NAME:-test-2:0.0.0.0}
      - ${ELASTICSEARCH_3_HOST_NAME:-test-3:0.0.0.0}
      - ${KIBANA_HOST_NAME:-test-4:0.0.0.0}
      - ${NIFI_HOST_NAME:-test-5:0.0.0.0}

  metricbeat-1:
    container_name: cogstack-metricbeat-1
    image: ${METRICBEAT_IMAGE:-docker.elastic.co/beats/metricbeat:8.18.2}
    command: -e --strict.perms=false
    env_file:
         - ./elasticsearch.env
         - ../security/env/users_elasticsearch.env
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS:-["https://elasticsearch-1:9200", "https://elasticsearch-2:9200"]}
      - METRICBEAT_USER=${METRICBEAT_USER:-elastic}
      - METRICBEAT_PASSWORD=${METRICBEAT_PASSWORD:-kibanaserver}
      - KIBANA_HOST=${KIBANA_HOST:-"https://kibana:5601"}
    volumes:
      - metricbeat-data-1:/usr/share/metricbeat/data

      - ../services/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      # ES NATIVE NODE CERTS
      - ../security/certificates/elastic/elasticsearch/elastic-stack-ca.crt.pem:/usr/share/metricbeat/root-ca.crt:ro
      - ../security/certificates/elastic/elasticsearch/elastic-stack-ca.key.pem:/usr/share/metricbeat/root-ca.key:ro 
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/${ES_INSTANCE_NAME_1:-elasticsearch-1}.p12:/usr/share/metricbeat/esnode.p12:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/${ES_INSTANCE_NAME_1:-elasticsearch-1}.crt:/usr/share/metricbeat/esnode.crt:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/${ES_INSTANCE_NAME_1:-elasticsearch-1}.key:/usr/share/metricbeat/esnode.key:ro

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 262144

    networks:
      - cognet

    extra_hosts:
      - ${ELASTICSEARCH_1_HOST_NAME:-elasticsearch-1:0.0.0.0}
      - ${ELASTICSEARCH_2_HOST_NAME:-elasticsearch-2:0.0.0.0}
      - ${ELASTICSEARCH_3_HOST_NAME:-elasticsearch-3:0.0.0.0}
      - ${KIBANA_HOST_NAME:-kibana:0.0.0.0}
      - ${NIFI_HOST_NAME:-nifi:0.0.0.0}

  metricbeat-2:
    container_name: cogstack-metricbeat-2
    image: ${METRICBEAT_IMAGE:-docker.elastic.co/beats/metricbeat:8.18.2}
    command: -e --strict.perms=false
    env_file:
         - ./network_settings.env
         - ./elasticsearch.env
         - ../security/env/users_elasticsearch.env
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS:-["https://elasticsearch-1:9200", "https://elasticsearch-2:9200"]}
      - METRICBEAT_USER=${METRICBEAT_USER:-elastic}
      - METRICBEAT_PASSWORD=${METRICBEAT_PASSWORD:-kibanaserver}
      - KIBANA_HOST=${KIBANA_HOST:-"https://kibana:5601"}
    volumes:
      - metricbeat-data-2:/usr/share/metricbeat/data

      - ../services/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      # ES NATIVE NODE CERTS
      - ../security/certificates/elastic/elasticsearch/elastic-stack-ca.crt.pem:/usr/share/metricbeat/root-ca.crt:ro
      - ../security/certificates/elastic/elasticsearch/elastic-stack-ca.key.pem:/usr/share/metricbeat/root-ca.key:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/${ES_INSTANCE_NAME_2:-elasticsearch-2}.p12:/usr/share/metricbeat/esnode.p12:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/${ES_INSTANCE_NAME_2:-elasticsearch-2}.crt:/usr/share/metricbeat/esnode.crt:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/${ES_INSTANCE_NAME_2:-elasticsearch-2}.key:/usr/share/metricbeat/esnode.key:ro

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 262144
    networks:
      - cognet
    extra_hosts:
      - ${ELASTICSEARCH_1_HOST_NAME:-test-1:0.0.0.0}
      - ${ELASTICSEARCH_2_HOST_NAME:-test-2:0.0.0.0}
      - ${ELASTICSEARCH_3_HOST_NAME:-test-3:0.0.0.0}
      - ${KIBANA_HOST_NAME:-test-4:0.0.0.0}
      - ${NIFI_HOST_NAME:-test-5:0.0.0.0}

  metricbeat-3:
    container_name: cogstack-metricbeat-3
    image: ${METRICBEAT_IMAGE:-docker.elastic.co/beats/metricbeat:8.18.2}
    command: -e --strict.perms=false
    env_file:
         - ./network_settings.env
         - ./elasticsearch.env
         - ../security/env/users_elasticsearch.env
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS:-["https://elasticsearch-1:9200", "https://elasticsearch-2:9200"]}
      - METRICBEAT_USER=${METRICBEAT_USER:-elastic}
      - METRICBEAT_PASSWORD=${METRICBEAT_PASSWORD:-kibanaserver}
      - KIBANA_HOST=${KIBANA_HOST:-"https://kibana:5601"}
    volumes:
      - metricbeat-data-2:/usr/share/metricbeat/data

      - ../services/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      # ES NATIVE NODE CERTS
      - ../security/certificates/elastic/elasticsearch/elastic-stack-ca.crt.pem:/usr/share/metricbeat/root-ca.crt:ro
      - ../security/certificates/elastic/elasticsearch/elastic-stack-ca.key.pem:/usr/share/metricbeat/root-ca.key:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/${ES_INSTANCE_NAME_3:-elasticsearch-3}.p12:/usr/share/metricbeat/esnode.p12:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/${ES_INSTANCE_NAME_3:-elasticsearch-3}.crt:/usr/share/metricbeat/esnode.crt:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/${ES_INSTANCE_NAME_3:-elasticsearch-3}.key:/usr/share/metricbeat/esnode.key:ro

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 262144
    networks:
      - cognet
    extra_hosts:
      - ${ELASTICSEARCH_1_HOST_NAME:-test-1:0.0.0.0}
      - ${ELASTICSEARCH_2_HOST_NAME:-test-2:0.0.0.0}
      - ${ELASTICSEARCH_3_HOST_NAME:-test-3:0.0.0.0}
      - ${KIBANA_HOST_NAME:-test-4:0.0.0.0}
      - ${NIFI_HOST_NAME:-test-5:0.0.0.0}

  filebeat-1:
    container_name: cogstack-filebeat-1
    image: ${FILEBEAT_IMAGE:-docker.elastic.co/beats/filebeat:8.18.2}
    command: ${FILEBEAT_STARTUP_COMMAND:-'-e --strict.perms=false'}
    env_file:
         - ./network_settings.env
         - ./elasticsearch.env
         - ../security/env/users_elasticsearch.env
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS:-["https://elasticsearch-1:9200", "https://elasticsearch-2:9200"]}
      - FILEBEAT_USER=${FILEBEAT_USER:-elastic}
      - FILEBEAT_PASSWORD=${FILEBEAT_PASSWORD:-kibanaserver}
      - KIBANA_HOST=${KIBANA_HOST:-"https://kibana:5601"}
    volumes:
      - filebeat-data-1:/usr/share/filebeat/data

      - ../services/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:rw
      # ES NATIVE NODE CERTS
      - ../security/certificates/elastic/elasticsearch/elastic-stack-ca.crt.pem:/etc/pki/root/root-ca.crt:ro
      - ../security/certificates/elastic/elasticsearch/elastic-stack-ca.key.pem:/etc/pki/root/root-ca.key:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/${ES_INSTANCE_NAME_1:-elasticsearch-1}.p12:/etc/pki/client/esnode.p12:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/${ES_INSTANCE_NAME_1:-elasticsearch-1}.crt:/etc/pki/client/esnode.crt:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/${ES_INSTANCE_NAME_1:-elasticsearch-1}.key:/etc/pki/client/esnode.key:ro

    # ES logs
      - ${ELASTICSEARCH_NODE_1_LOG_VOL_NAME:-elasticsearch-vol-log-1}:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/logs

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 262144
    networks:
      - cognet
    extra_hosts:
      - ${ELASTICSEARCH_1_HOST_NAME:-test-1:0.0.0.0}
      - ${ELASTICSEARCH_2_HOST_NAME:-test-2:0.0.0.0}
      - ${ELASTICSEARCH_3_HOST_NAME:-test-3:0.0.0.0}
      - ${KIBANA_HOST_NAME:-test-4:0.0.0.0}
      - ${NIFI_HOST_NAME:-test-5:0.0.0.0}

  filebeat-2:
    container_name: cogstack-filebeat-2
    image: ${FILEBEAT_IMAGE:-docker.elastic.co/beats/filebeat:8.18.2}
    command: ${FILEBEAT_STARTUP_COMMAND:-'-e --strict.perms=false'}
    env_file:
         - ./network_settings.env
         - ./elasticsearch.env
         - ../security/env/users_elasticsearch.env
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS:-["https://elasticsearch-1:9200", "https://elasticsearch-2:9200"]}
      - FILEBEAT_USER=${FILEBEAT_USER:-elastic}
      - FILEBEAT_PASSWORD=${FILEBEAT_PASSWORD:-kibanaserver}
      - KIBANA_HOST=${KIBANA_HOST:-"https://kibana:5601"}
    volumes:
      - filebeat-data-2:/usr/share/filebeat/data

      - ../services/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:rw
      # ES NATIVE NODE CERTS
      - ../security/certificates/elastic/elasticsearch/elastic-stack-ca.crt.pem:/etc/pki/root/root-ca.crt:ro
      - ../security/certificates/elastic/elasticsearch/elastic-stack-ca.key.pem:/etc/pki/root/root-ca.key:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/${ES_INSTANCE_NAME_2:-elasticsearch-2}.p12:/etc/pki/client/esnode.p12:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/${ES_INSTANCE_NAME_2:-elasticsearch-2}.crt:/etc/pki/client/esnode.crt:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/${ES_INSTANCE_NAME_2:-elasticsearch-2}.key:/etc/pki/client/esnode.key:ro

    # ES logs
      - ${ELASTICSEARCH_NODE_2_LOG_VOL_NAME:-elasticsearch-vol-log-2}:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/logs

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 262144
    networks:
      - cognet
    extra_hosts:
      - ${ELASTICSEARCH_1_HOST_NAME:-test-1:0.0.0.0}
      - ${ELASTICSEARCH_2_HOST_NAME:-test-2:0.0.0.0}
      - ${ELASTICSEARCH_3_HOST_NAME:-test-3:0.0.0.0}
      - ${KIBANA_HOST_NAME:-test-4:0.0.0.0}
      - ${NIFI_HOST_NAME:-test-5:0.0.0.0}

  filebeat-3:
    container_name: cogstack-filebeat-3
    image: ${FILEBEAT_IMAGE:-docker.elastic.co/beats/filebeat:8.18.2}
    command: ${FILEBEAT_STARTUP_COMMAND:-'-e --strict.perms=false'}
    env_file:
         - ./network_settings.env
         - ./elasticsearch.env
         - ../security/env/users_elasticsearch.env
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS:-["https://elasticsearch-1:9200", "https://elasticsearch-2:9200"]}
      - FILEBEAT_USER=${FILEBEAT_USER:-elastic}
      - FILEBEAT_PASSWORD=${FILEBEAT_PASSWORD:-kibanaserver}
      - KIBANA_HOST=${KIBANA_HOST:-"https://kibana:5601"}
    volumes:
      - filebeat-data-3:/usr/share/filebeat/data

      - ../services/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:rw
      # ES NATIVE NODE CERTS
      - ../security/certificates/elastic/elasticsearch/elastic-stack-ca.crt.pem:/etc/pki/root/root-ca.crt:ro
      - ../security/certificates/elastic/elasticsearch/elastic-stack-ca.key.pem:/etc/pki/root/root-ca.key:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/${ES_INSTANCE_NAME_3:-elasticsearch-3}.p12:/etc/pki/client/esnode.p12:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/${ES_INSTANCE_NAME_3:-elasticsearch-3}.crt:/etc/pki/client/esnode.crt:ro
      - ../security/certificates/elastic/elasticsearch/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/${ES_INSTANCE_NAME_3:-elasticsearch-3}.key:/etc/pki/client/esnode.key:ro

    # ES logs
      - ${ELASTICSEARCH_NODE_3_LOG_VOL_NAME:-elasticsearch-vol-log-3}:/usr/share/${ELASTICSEARCH_VERSION:-opensearch}/logs

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 262144
    networks:
      - cognet
    extra_hosts:
      - ${ELASTICSEARCH_1_HOST_NAME:-test-1:0.0.0.0}
      - ${ELASTICSEARCH_2_HOST_NAME:-test-2:0.0.0.0}
      - ${ELASTICSEARCH_3_HOST_NAME:-test-3:0.0.0.0}
      - ${KIBANA_HOST_NAME:-test-4:0.0.0.0}
      - ${NIFI_HOST_NAME:-test-5:0.0.0.0}
#---------------------------------------------------------------------------#
# Kibana webapp                                                             #
#---------------------------------------------------------------------------#
  kibana:
    image: ${ELASTICSEARCH_KIBANA_DOCKER_IMAGE:-opensearchproject/opensearch-dashboards:3.2.0}
    container_name: cogstack-kibana
    restart: always
    env_file:
         - ./network_settings.env
         - ./elasticsearch.env
         - ../security/env/users_elasticsearch.env
         - ../security/env/certificates_elasticsearch.env
    environment:
      # INFO: use HTTPS instead of HTTP when enabled SSL
      OPENSEARCH_HOSTS: ${ELASTICSEARCH_HOSTS:-'["https://elasticsearch-1:9200","https://elasticsearch-2:9200"]'}
      ELASTICSEARCH_HOSTS: ${ELASTICSEARCH_HOSTS:-'["https://elasticsearch-1:9200","https://elasticsearch-2:9200"]'}
      # INFO: uncomment below to enable SSL keys
      SERVER_SSL_ENABLED: ${ELASTICSEARCH_SSL_ENABLED:-"true"}
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${ES_ADMIN_PASS:-admin}

    volumes:
      # INFO: Kibana configuration mapped via volume (make sure to comment this and uncomment the next line if you are using NATIVE kibana deployment)
      - ../services/kibana/config/${ELASTICSEARCH_VERSION:-opensearch}.yml:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/${KIBANA_CONFIG_FILE_VERSION:-opensearch_dashboards}.yml:ro

      # Security certificates, general      
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elastic-stack-ca.crt.pem:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/root-ca.crt:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elastic-stack-ca.key.pem:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/root-ca.key:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elastic-stack-ca.p12:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/root-ca.p12:ro

      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/${ES_INSTANCE_NAME_1:-elasticsearch-1}.crt:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/esnode1.crt:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/${ES_INSTANCE_NAME_2:-elasticsearch-2}.crt:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/esnode2.crt:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/${ES_INSTANCE_NAME_3:-elasticsearch-3}.crt:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/esnode3.crt:ro

      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/${ES_INSTANCE_NAME_1:-elasticsearch-1}.key:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/esnode1.key:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/${ES_INSTANCE_NAME_2:-elasticsearch-2}.key:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/esnode2.key:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/${ES_INSTANCE_NAME_3:-elasticsearch-3}.key:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/esnode3.key:ro

      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/${ES_INSTANCE_NAME_1:-elasticsearch-1}.p12:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/esnode1.p12:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/${ES_INSTANCE_NAME_2:-elasticsearch-2}.p12:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/esnode2.p12:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/${ES_INSTANCE_NAME_3:-elasticsearch-3}.p12:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/esnode3.p12:ro

      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/http-${ES_INSTANCE_NAME_1:-elasticsearch-1}.csr:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/http-esnode1.csr:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/http-${ES_INSTANCE_NAME_2:-elasticsearch-2}.csr:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/http-esnode2.csr:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/http-${ES_INSTANCE_NAME_3:-elasticsearch-3}.csr:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/http-esnode3.csr:ro

      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_1:-elasticsearch-1}/http-${ES_INSTANCE_NAME_1:-elasticsearch-1}.key:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/http-esnode1.key:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_2:-elasticsearch-2}/http-${ES_INSTANCE_NAME_2:-elasticsearch-2}.key:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/http-esnode2.key:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elasticsearch/${ES_INSTANCE_NAME_3:-elasticsearch-3}/http-${ES_INSTANCE_NAME_3:-elasticsearch-3}.key:/usr/share/${KIBANA_VERSION:-opensearch-dashboards}/config/http-esnode3.key:ro

      
      # OpenSearch only certs
      - ../security/certificates/elastic/opensearch/admin.crt:/usr/share/opensearch-dashboards/config/admin.crt:ro
      - ../security/certificates/elastic/opensearch/admin.key.pem:/usr/share/opensearch-dashboards/config/admin.key.pem:ro
      - ../security/certificates/elastic/opensearch/es_kibana_client.pem:/usr/share/opensearch-dashboards/config/kibana.pem:ro
      - ../security/certificates/elastic/opensearch/es_kibana_client.key:/usr/share/opensearch-dashboards/config/kibana.key:ro
    ports:
      - "${KIBANA_SERVER_OUTPUT_PORT:-5601}:5601"
    networks:
      - cognet
    extra_hosts:
      - ${ELASTICSEARCH_1_HOST_NAME:-test-1:0.0.0.0}
      - ${ELASTICSEARCH_2_HOST_NAME:-test-2:0.0.0.0}
      - ${ELASTICSEARCH_3_HOST_NAME:-test-3:0.0.0.0}
      - ${KIBANA_HOST_NAME:-test-4:0.0.0.0}
      - ${NIFI_HOST_NAME:-test-5:0.0.0.0}

#---------------------------------------------------------------------------#
# NiFi webapp                                                               #
#---------------------------------------------------------------------------#
  nifi:
    image: cogstacksystems/cogstack-nifi:latest-${CPU_ARCHITECTURE:-amd64}
    container_name: cogstack-nifi
    hostname: nifi
    restart: always
    env_file:
      - ./general.env
      - ./project.env
      - ./nifi.env
      - ./elasticsearch.env
      - ./network_settings.env
      - ../security/env/users_nifi.env
      - ../security/env/users_elasticsearch.env
      - ../security/env/certificates_general.env
      - ../security/env/certificates_elasticsearch.env
      - ../security/env/certificates_nifi.env
    shm_size: 1g
    environment:
      - USER_ID=${NIFI_UID:-1000}
      - GROUP_ID=${NIFI_GID:-1000}
      - NIFI_WEB_PROXY_HOST=${NIFI_WEB_PROXY_HOST:-"localhost:8443"}
      - NIFI_WEB_PROXY_CONTEXT_PATH=${NIFI_WEB_PROXY_CONTEXT_PATH:-"/nifi"}
      - NIFI_INTERNAL_PORT=${NIFI_INTERNAL_PORT:-8443}
      - NIFI_OUTPUT_PORT=${NIFI_OUTPUT_PORT:-8082}
      - NIFI_INPUT_SOCKET_PORT=${NIFI_INPUT_SOCKET_PORT:-10000}
      - NIFI_SECURITY_DIR=${NIFI_SECURITY_DIR:-../security/certificates/nifi/}
      - ELASTICSEARCH_SECURITY_DIR=${ELASTICSEARCH_SECURITY_DIR:-../security/certificates/elastic/}
    volumes:
      # INFO: mapping custom development directory
      - ../nifi/devel:/opt/nifi/devel

      # INFO: drivers folder
      - ../nifi/drivers:/opt/nifi/drivers
      
      # INFO: if there are  local changes, map these content from local host to container
      #       (normally, these 3 directories  below are bundled with our NiFi image)
      # N.B. The container user may not have the permission to read these directories/files.
      - ../nifi/user-templates:/opt/nifi/nifi-current/conf/templates:rw
      - ../nifi/user-scripts:/opt/nifi/user-scripts:rw
      - ../nifi/user-schemas:/opt/nifi/user-schemas:rw

      # this is a direct mapping to where we store the NiFi python processors as of NiFi 2.0.x
      - ../nifi/user-python-extensions:/opt/nifi/nifi-current/python_extensions:rw
      
      # INFO: uncomment below to map security certificates if need to secure NiFi endpoints 
      - ./${NIFI_SECURITY_DIR:-../security/certificates/nifi/}:/opt/nifi/nifi-current/nifi_certificates:ro
      - ./${ELASTICSEARCH_SECURITY_DIR:-../security/certificates/elastic/}:/opt/nifi/nifi-current/es_certificates:ro
  
      # Security credentials scripts
      - ../security/scripts/nifi_create_single_user_auth.sh:/opt/nifi/nifi-current/security_scripts/nifi_create_single_user_auth.sh:ro

      # # Nifi properties file:
      - ../nifi/conf/:/opt/nifi/nifi-current/conf/:rw

      # this is where you should place data to be ingested, under the form of symbolic
      - ./${NIFI_DATA_PATH:-../data/}:/opt/data/:rw

      # DB-schemas, from the services folder
      - ../services/cogstack-db/:/opt/cogstack-db/:rw

      # medcat models
      - ./${RES_MEDCAT_SERVICE_MODEL_PRODUCTION_PATH:-../services/nlp-services/medcat-service/models/}:/opt/models:rw

      # rest of volumes to persist the state
      - nifi-vol-logs:/opt/nifi/nifi-current/logs
      - nifi-vol-provenance:/opt/nifi/nifi-current/provenance_repository
      - nifi-vol-database:/opt/nifi/nifi-current/database_repository
      - nifi-vol-flowfiles:/opt/nifi/nifi-current/flowfile_repository
      - nifi-vol-content:/opt/nifi/nifi-current/content_repository
      - nifi-vol-state:/opt/nifi/nifi-current/state

      # errors generated during data processing
      - nifi-vol-errors:/opt/nifi/pipeline/flowfile-errors

    extra_hosts:
      - ${ELASTICSEARCH_1_HOST_NAME:-test-1:0.0.0.0}
      - ${ELASTICSEARCH_2_HOST_NAME:-test-2:0.0.0.0}
      - ${ELASTICSEARCH_3_HOST_NAME:-test-3:0.0.0.0}
      - ${KIBANA_HOST_NAME:-test-4:0.0.0.0}
      - ${NIFI_HOST_NAME:-test-5:0.0.0.0}
      - ${NIFI_REGISTRY_HOST_NAME:-test-6:0.0.0.0}

    # user: "${NIFI_UID:-1000}:${NIFI_GID:-1000}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 262144

    # INFO : Uncomment the below line to generate your own USERNAME and PASSWORD,
    #        a bit messy this way as you will need to copy the credentials back
    #        to the "login-identity-providers.xml" section.
    # entrypoint: bash -c "/opt/nifi/nifi-current/bin/nifi.sh set-single-user-credentials admin admincogstacknifi"
   
    tty: true
    ports:
      - "${NIFI_OUTPUT_PORT:-8082}:${NIFI_INTERNAL_PORT:-8443}"
      - "${NIFI_INPUT_SOCKET_PORT:-10000}"
    networks:
      - cognet

  nifi-registry-flow:
    image: apache/nifi-registry:${NIFI_REGISTRY_VERSION:-2.5.0}
    hostname: nifi-registry
    container_name: cogstack-nifi-registry-flow
    restart: always
    user: root
    env_file:
      - ./general.env
      - ./network_settings.env
      - ./nifi.env
      - ./project.env
      - ../security/env/users_nifi.env
      - ../security/env/users_elasticsearch.env
      - ../security/env/certificates_general.env
      - ../security/env/certificates_elasticsearch.env
      - ../security/env/certificates_nifi.env
    environment:
      - http_proxy=$HTTP_PROXY
      - https_proxy=$HTTPS_PROXY
      - no_proxy=$no_proxy
      - USER_ID=${NIFI_UID:-1000}
      - GROUP_ID=${NIFI_GID:-1000}
      - KEYSTORE_PATH=${NIFI_REGISTRY_KEYSTORE_PATH:-./conf/keystore.jks}
      - KEYSTORE_TYPE=${NIFI_KEYSTORE_TYPE:-jks}
      - KEYSTORE_PASSWORD=${NIFI_KEYSTORE_PASSWORD:-"cogstackNifi"}
      - TRUSTSTORE_PASSWORD=${NIFI_TRUSTSTORE_PASSWORD:-"cogstackNifi"}
      - TRUSTSTORE_PATH=${NIFI_REGISTRY_TRUSTSTORE_PATH:-./conf/truststore.jks}

      - TRUSTSTORE_TYPE=${NIFI_TRUSTSTORE_TYPE:-jks}
      - INITIAL_ADMIN_IDENTITY=${NIFI_INITIAL_ADMIN_IDENTITY:-"CN=admin, OU=nifi"}
      - AUTH=${NIFI_AUTH:-"tls"}
      - NIFI_REGISTRY_DB_DIR=${NIFI_REGISTRY_DB_DIR:-/opt/nifi-registry/nifi-registry-current/database}
      #- NIFI_REGISTRY_FLOW_PROVIDER=${NIFI_REGISTRY_FLOW_PROVIDER:-file}
      - NIFI_REGISTRY_FLOW_STORAGE_DIR=${NIFI_REGISTRY_FLOW_STORAGE_DIR:-/opt/nifi-registry/nifi-registry-current/flow_storage}
    volumes:
      - ../nifi/nifi-registry/:/opt/nifi-registry/nifi-registry-current/conf/:rw
      - ./${NIFI_SECURITY_DIR:-../security/certificates/nifi/}nifi-keystore.jks:/opt/nifi-registry/nifi-registry-current/conf/keystore.jks:ro
      - ./${NIFI_SECURITY_DIR:-../security/certificates/nifi/}nifi-truststore.jks://opt/nifi-registry/nifi-registry-current/conf/truststore.jks:ro
      - nifi-registry-vol-database:/opt/nifi-registry/nifi-registry-current/database
      - nifi-registry-vol-flow-storage:/opt/nifi-registry/nifi-registry-current/flow_storage
      - nifi-registry-vol-work:/opt/nifi-registry/nifi-registry-current/work
      - nifi-registry-vol-logs:/opt/nifi-registry/nifi-registry-current/logs
    extra_hosts:
      - ${NIFI_HOST_NAME:-test-5:0.0.0.0}
      - ${NIFI_REGISTRY_HOST_NAME:-test-6:0.0.0.0}

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 262144

    tty: true
    ports:
      - "${NIFI_REGISTRY_FLOW_OUTPUT_PORT:-8083}:${NIFI_REGISTRY_FLOW_INPUT_PORT:-18443}"
    
    entrypoint: bash -c "chown -R nifi:nifi /opt/nifi-registry/nifi-registry-current/database && \
      chown -R nifi:nifi /opt/nifi-registry/nifi-registry-current/flow_storage && \
      chown -R nifi:nifi /opt/nifi-registry/nifi-registry-current/work && \
      chown -R nifi:nifi /opt/nifi-registry/nifi-registry-current/logs && \
      bash /opt/nifi-registry/scripts/start.sh"

    networks:
      - cognet

  nifi-nginx:
    image: cogstacksystems/nifi-nginx:latest-${CPU_ARCHITECTURE:-amd64}
    container_name: cogstack-nifi-nginx
    restart: always
    env_file:
      - ./network_settings.env
      - ./nginx.env
      - ./nifi.env
      - ./elasticsearch.env
      - ./project.env
    volumes:
      - ../services/nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ../services/nginx/config/nginx.conf.template:/etc/nginx/config/nginx.conf.template:rw
      - ../services/nginx/config/nginx.conf:/etc/nginx/nginx.conf:rw
      - ../security/certificates/root:/etc/nginx/root_certificates:ro
      - ../security/certificates/nifi:/etc/nginx/nifi_certificates:ro

      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elastic-stack-ca.crt.pem:/etc/nginx/elastic/elastic-stack-ca.crt.pem:ro
      - ../security/certificates/elastic/${ELASTICSEARCH_VERSION:-opensearch}/elastic-stack-ca.key.pem:/etc/nginx/elastic/elastic-stack-ca.key.pem:ro
      # - ../security/certificates/elastic/:/etc/nginx/elastic/:ro
    ports:
      - "${NIFI_EXTERNAL_PORT_NGINX:-8443}:${NIFI_INTERNAL_PORT_NGINX:-8443}"
      - "${NIFI_REGISTRY_EXTERNAL_PORT_NGINX:-18443}:${NIFI_REGISTRY_INTERNAL_PORT_NGINX:-18443}"
    networks:
      - cognet
    command: /bin/bash -c "envsubst < /etc/nginx/config/nginx.conf.template > /etc/nginx/config/nginx.conf && nginx -g 'daemon off;'"

#---------------------------------------------------------------------------#
# Cogstack cohort service                                                   #
#---------------------------------------------------------------------------#
  cogstack-cohort:
      container_name: cogstack-cohort
      image: cogstacksystems/cogstackcohort:latest
      shm_size: 128mb
      restart: always
      env_file:
        - ./general.env
        - ./network_settings.env
      volumes:
        - ./../data/cogstack-cohort:/usr/src/app/server/data:rw
        - ./../services/cogstack-cohort/cui_pt2ch.json:/usr/src/app/server/data/cui_pt2ch.json:rw
        - ./../services/cogstack-cohort/snomed_terms.json:/usr/src/app/server/data/snomed_terms.json:rw
      networks:
        - cognet
      ports:
        - "3001:3000"

#---------------------------------------------------------------------------#
# Version control service                                                   #
#---------------------------------------------------------------------------#
  gitea:
    container_name: cogstack-gitea
    image:  gitea/gitea:1.23-rootless
    shm_size: 256mb
    restart: always
    environment:
      - http_proxy=$HTTP_PROXY
      - https_proxy=$HTTPS_PROXY
      - no_proxy=$no_proxy
    volumes:
      # app config
      - ../services/gitea/app.ini:/etc/gitea/app.ini:rw
      # certificates
      - ../security/certificates/root/root-ca.key:/certificates/root-ca.key:ro
      - ../security/certificates/root/root-ca.pem:/certificates/root-ca.pem:ro
      # data & conf volumes
      - gitea-config-vol:/etc/gitea:rw
      - gitea-lib-vol:/var/lib/gitea:rw
      - gitea-data-vol:/data:rw
    networks:
      - cognet
    ports:
      - "3000:3000"
      - "2222:22"

#---------------------------------------------------------------------------#
# Docker named volumes                                                      #
#---------------------------------------------------------------------------#
volumes:
  samples-vol:
    driver: local

  databank-vol:
    driver: local

  # ELK-stack related
  elasticsearch-vol-1:
    driver: local
  elasticsearch-vol-2:
    driver: local
  elasticsearch-vol-3:
    driver: local
  elasticsearch-certs-vol:
    driver: local
  
  elasticsearch-vol-log-1:
    driver: local
  elasticsearch-vol-log-2:
    driver: local
  elasticsearch-vol-log-3:
    driver: local

  metricbeat-data-1:
    driver: local
  metricbeat-data-2:
    driver: local

  filebeat-data-1:
    driver: local
  filebeat-data-2:
    driver: local
  filebeat-data-3:
    driver: local

  # NiFi related
  nifi-vol-logs:
    driver: local

  nifi-vol-provenance:
    driver: local

  nifi-vol-database:
    driver: local

  nifi-vol-flowfiles:
    driver: local

  nifi-vol-content:
    driver: local
  
  nifi-vol-state:
    driver: local

  nifi-vol-errors:
    driver: local

  nifi-registry-vol-database:
    driver: local
  nifi-registry-vol-flow-storage:
    driver: local
  nifi-registry-vol-work:
    driver: local
  nifi-registry-vol-logs:
    driver: local

  # Gitea
  gitea-lib-vol:
    driver: local
  gitea-config-vol:
    driver: local
  gitea-data-vol:
    driver: local

#---------------------------------------------------------------------------#
# Docker networks.                                                          #
#---------------------------------------------------------------------------#
networks:
  cognet:
    driver: bridge
    name: cogstack-net
