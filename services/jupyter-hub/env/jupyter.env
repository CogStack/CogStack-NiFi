# Spawn containers from this image
# Either use the CoGstack one from the repo which is huge and contains all the stuff needed or,
# use the default official one which is clean.
# possible values:
# newer versions post 1.2.7 have both amd64 and arm64 architecture builds.
#   jupyter-hub ARM64/AMD64: cogstacksystems/jupyter-hub:latest-arm64, cogstacksystems/jupyter-hub:latest-amd64
#   minimal official image ARM64/AMD64: "jupyterhub/singleuser:latest"
#   jupyter-singleuser ARM64/AMD64: cogstacksystems/jupyter-singleuser:latest-arm64, cogstacksystems/jupyter-singleuser:latest-amd64
#   jupyter-singleuser-gpu AMD64: ogstacksystems/jupyter-singleuser-gput:latest-amd64
#   last stable release build (AMD64 only): "cogstacksystems/jupyter-singleuser:1.2.7"
# The CogStack images are huge and will take a bit to download
DOCKER_NOTEBOOK_IMAGE="cogstacksystems/jupyter-singleuser:2.0.1-${CPU_ARCHITECTURE:-amd64}"

# This needs to be set to true if you intend to use the GPU image
# possible values: "true", "false"
# if you set this value to "true" you MUST have a gpu on the machine or otherwise IT WILL CRASH
DOCKER_ENABLE_GPU_SUPPORT="false"

# possible values: "true", "false", use for heavy debugging
DOCKER_NOTEBOOK_DEBUG_MODE="false"

# give the possibility of selection an image from a list for users
DOCKER_SELECT_NOTEBOOK_IMAGE_ALLOWED=false

# The timeout in seconds after which the idle notebook container will be shutdown (in seconds)
DOCKER_NOTEBOOK_IDLE_TIMEOUT=7200

# Persist hub data on volume mounted inside container
# "./" all data within the user's folder is saved
# DO NOT CHANGE
DATA_VOLUME_CONTAINER=""

# These don't really need to be changed.
SSL_KEY="/srv/jupyterhub/root-ca.key"
SSL_CERT="/srv/jupyterhub/root-ca.pem"

DOCKER_NETWORK_NAME="cogstack-net"

# This needs to match the container name of jupyter-hub. In DEV_MODE, change this to : cogstack-jupyter-hub-dev
DOCKER_JUPYTER_HUB_CONTAINER_NAME="cogstack-jupyter-hub-dev"

# general user resource cap per container, default 2 cores, 2GB ram
RESOURCE_ALLOCATION_USER_CPU_LIMIT="2"
RESOURCE_ALLOCATION_USER_RAM_LIMIT="2.0G"

# admin resource cap per container, default 2 cores, 4 GB RAM
RESOURCE_ALLOCATION_ADMIN_CPU_LIMIT="2"
RESOURCE_ALLOCATION_ADMIN_RAM_LIMIT="4.0G"

# Set the log level by value or name.
#  Choices: any of [0, 10, 20, 30, 40, 50, "DEBUG", "INFO", "WARN", "ERROR", "CRITICAL"]
#  Default: INFO
JUPYTERHUB_LOG_LEVEL="INFO"

# Shared volume between users (they need to be in the same group)
DOCKER_SHARED_DIR="/home/jovyan/scratch"

# The user's own work folder, DO NOT CHANGE THIS
DOCKER_NOTEBOOK_DIR="/home/jovyan/work"

# Internal port which the service is started (inside the container)
JUPYTERHUB_INTERNAL_PORT=8888

# Proxy URL
JUPYTERHUB_PROXY_API_URL="http://127.0.0.1:"

# Internal proxy api port
JUPYTERHUB_INTERNAL_PROXY_API_PORT=8887

# SSL port
JUPYTERHUB_SSL_PORT=443
