{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/eslint-loader/index.js??ref--13-0!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/router.js","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/router.js","mtime":1606056125756},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZSI7CgovKiBlc2xpbnQtZGlzYWJsZSAqLwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBSb3V0ZXIgZnJvbSAndnVlLXJvdXRlcic7CmltcG9ydCBFU0tpYmFuYSBmcm9tICcuL2NvbXBvbmVudHMvRVNLaWJhbmEudnVlJzsKaW1wb3J0IE1lZGNhdCBmcm9tICcuL2NvbXBvbmVudHMvTWVkY2F0LnZ1ZSc7CmltcG9ydCBIb21lIGZyb20gJy4vY29tcG9uZW50cy9Ib21lLnZ1ZSc7CmltcG9ydCBMb2dpbiBmcm9tICcuL2NvbXBvbmVudHMvTG9naW4udnVlJzsKVnVlLnVzZShSb3V0ZXIpOwp2YXIgcm91dGVyID0gbmV3IFJvdXRlcih7CiAgbW9kZTogJ2hpc3RvcnknLAogIGJhc2U6IHByb2Nlc3MuZW52LkJBU0VfVVJMLAogIHJvdXRlczogW3sKICAgIHBhdGg6ICcvJywKICAgIG5hbWU6ICdMb2dpbicsCiAgICBjb21wb25lbnQ6IExvZ2luLAogICAgbWV0YTogewogICAgICByZXF1aXJlc0F1dGg6IGZhbHNlCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9ob21lJywKICAgIG5hbWU6ICdIb21lJywKICAgIGNvbXBvbmVudDogSG9tZSwKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZXNBdXRoOiB0cnVlCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9lc2tpYmFuYScsCiAgICBuYW1lOiAnRVNLaWJhbmEnLAogICAgY29tcG9uZW50OiBFU0tpYmFuYSwKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZXNBdXRoOiB0cnVlCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9tZWRjYXQnLAogICAgbmFtZTogJ01lZGNhdCcsCiAgICBjb21wb25lbnQ6IE1lZGNhdCwKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZXNBdXRoOiB0cnVlCiAgICB9CiAgfV0KfSk7CnJvdXRlci5iZWZvcmVFYWNoKGZ1bmN0aW9uICh0bywgZnJvbSwgbmV4dCkgewogIGNvbnNvbGUubG9nKCdjaGVja2luZyByb3V0ZScpOwoKICBpZiAodG8ubWF0Y2hlZC5zb21lKGZ1bmN0aW9uIChyb3V0ZSkgewogICAgcmV0dXJuIHJvdXRlLm1ldGEucmVxdWlyZXNBdXRoOwogIH0pKSB7CiAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2p3dCcpID09IG51bGwpIHsKICAgICAgbmV4dCh7CiAgICAgICAgbmFtZTogJ0xvZ2luJywKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIG5leHRVcmw6IHRvLmZ1bGxQYXRoCiAgICAgICAgfQogICAgICB9KTsKICAgIH0gZWxzZSB7CiAgICAgIG5leHQoKTsKICAgIH0KICB9IGVsc2UgewogICAgY29uc29sZS5sb2coJ3JlamVjdGVkIGdvaW5nIHRvIGxvZ2luJyk7CiAgICBuZXh0KHsKICAgICAgbmFtZTogJ0xvZ2luJywKICAgICAgcGFyYW1zOiB7CiAgICAgICAgbmV4dFVybDogdG8uZnVsbFBhdGgKICAgICAgfQogICAgfSk7CiAgfQp9KTsKZXhwb3J0IGRlZmF1bHQgcm91dGVyOw=="},{"version":3,"sources":["/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/router.js"],"names":["Vue","Router","ESKibana","Medcat","Home","Login","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","beforeEach","to","from","next","console","log","matched","some","route","localStorage","getItem","params","nextUrl","fullPath"],"mappings":";;AAAA;AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEAL,GAAG,CAACM,GAAJ,CAAQL,MAAR;AAEA,IAAIM,MAAM,GAAG,IAAIN,MAAJ,CAAW;AACtBO,EAAAA,IAAI,EAAE,SADgB;AAEtBC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFI;AAGtBC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,SAAS,EAAEX,KAHb;AAIEY,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ;AAJR,GADM,EASN;AACEJ,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAEZ,IAHb;AAIEa,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ;AAJR,GATM,EAiBN;AACEJ,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,SAAS,EAAEd,QAHb;AAIEe,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ;AAJR,GAjBM,EAyBN;AACEJ,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,SAAS,EAAEb,MAHb;AAIEc,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ;AAJR,GAzBM;AAHc,CAAX,CAAb;AAuCAX,MAAM,CAACY,UAAP,CAAkB,UAACC,EAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAqB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,MAAIJ,EAAE,CAACK,OAAH,CAAWC,IAAX,CAAgB,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACV,IAAN,CAAWC,YAAf;AAAA,GAArB,CAAJ,EAAuD;AACnD,QAAIU,YAAY,CAACC,OAAb,CAAqB,KAArB,KAA+B,IAAnC,EAAwC;AACpCP,MAAAA,IAAI,CAAC;AACDP,QAAAA,IAAI,EAAC,OADJ;AAEHe,QAAAA,MAAM,EAAE;AAAEC,UAAAA,OAAO,EAAEX,EAAE,CAACY;AAAd;AAFL,OAAD,CAAJ;AAIV,KALM,MAKD;AACKV,MAAAA,IAAI;AACd;AACG,GATD,MASM;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAF,IAAAA,IAAI,CAAC;AACHP,MAAAA,IAAI,EAAC,OADF;AAEHe,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAEX,EAAE,CAACY;AAAd;AAFL,KAAD,CAAJ;AAIH;AACJ,CAlBD;AAoBA,eAAezB,MAAf","sourcesContent":["/* eslint-disable */\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport ESKibana from './components/ESKibana.vue';\nimport Medcat from './components/Medcat.vue';\nimport Home from './components/Home.vue';\nimport Login from './components/Login.vue';\n\nVue.use(Router);\n\nlet router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: 'Login',\n      component: Login,\n      meta: {\n          requiresAuth: false\n      }\n    },\n    {\n      path: '/home',\n      name: 'Home',\n      component: Home,\n      meta: {\n          requiresAuth: true\n      }\n    },\n    {\n      path: '/eskibana',\n      name: 'ESKibana',\n      component: ESKibana,\n      meta: {\n          requiresAuth: true\n      }\n    },\n    {\n      path: '/medcat',\n      name: 'Medcat',\n      component: Medcat,\n      meta: {\n          requiresAuth: true\n      }\n    },\n  ],\n});\n\nrouter.beforeEach((to , from, next) => {\n    console.log('checking route')\n    if (to.matched.some(route => route.meta.requiresAuth)) {\n        if (localStorage.getItem('jwt') == null){\n            next({\n                name:'Login',\n\t\t            params: { nextUrl: to.fullPath}\n\t          })\n\t} else{\n            next()\n\t}\n    } else{\n        console.log('rejected going to login');\n        next({\n          name:'Login',\n          params: { nextUrl: to.fullPath}\n        })\n    }\n})\n\nexport default router\n"]}]}