{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/views/ModelZoo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/views/ModelZoo.vue","mtime":1621991577265},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qZXNsaW50LWRpc2FibGUqLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgSGVhZGVyIGZyb20gJ0AvY29tcG9uZW50cy9IZWFkZXIudnVlJzsKaW1wb3J0IHJvdXRlciBmcm9tICcuLi9yb3V0ZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ01vZGVsWm9vJywKICBjb21wb25lbnRzOiB7CiAgICBIZWFkZXI6IEhlYWRlcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlYXJjaHRleHQ6ICcnLAogICAgICBtb2RlbHM6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2htb2RlbHM6IGZ1bmN0aW9uIGZldGNobW9kZWxzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHBhdGggPSAnaHR0cDovLzEyNy4wLjAuMScgKyAnOjUwMDEvZmV0Y2htb2RlbG5hbWVzJzsKICAgICAgYXhpb3MuZ2V0KHBhdGgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLm1vZGVscyA9IHJlcy5kYXRhLm1vZGVsbmFtZXM7CiAgICAgICAgY29uc29sZS5sb2coX3RoaXMubW9kZWxzKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgIH0pOwogICAgfSwKICAgIG9wZW5tb2RlbHZpZXdlcjogZnVuY3Rpb24gb3Blbm1vZGVsdmlld2VyKG1vZGVsaWQpIHsKICAgICAgcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICdNb2RlbFZpZXdlcicsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBtb2RlbGlkOiBtb2RlbGlkCiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNobW9kZWxzKCk7CiAgfQp9Ow=="},{"version":3,"sources":["ModelZoo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,yBAAA;AACA,OAAA,MAAA,MAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAHA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GAbA;AAeA,EAAA,OAAA,EAAA;AAEA,IAAA,WAFA,yBAEA;AAAA;;AACA,UAAA,IAAA,GAAA,qBAAA,uBAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,IAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,GAAA,CAAA,IAAA,CAAA,UAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,KAAA;AACA,OAPA;AAQA,KAZA;AAcA,IAAA,eAdA,2BAcA,OAdA,EAcA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,aAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,OAAA,EAAA;AAAA;AAAA,OAAA;AACA;AAhBA,GAfA;AAmCA,EAAA,OAnCA,qBAmCA;AACA,SAAA,WAAA;AACA;AArCA,CAAA","sourcesContent":["<template>\n<!-- eslint-disable  -->\n  <div>\n    <Header/>\n    <div class=\"container\">\n\n      <div class=\"block\">\n            <div class=\"columns\">\n              <div class=\"column is-one-quarter\">\n                <div class=\"box\">\n                    <h2>Model Type</h2>\n                    <label class=\"checkbox\">\n                    <input type=\"checkbox\">\n                        medcat\n                    </label>\n                </div>\n              </div>\n                <div class=\"column\">\n                    <div class=\"field\">\n                        <div class=\"control\">\n                        <input class=\"input is-medium\"  @input=\"searchindex()\" v-model=\"searchtext\" type=\"text\" placeholder=\"search for a model here\">\n                        </div>\n                    </div>\n\n                    <div class=\"container is-fluid\">\n                        <div class=\"cards\"> \n                            <!-- <div class=\"card\" v-for=\"model in models\" :key=\"model.name\" @click=\"openmodel()\">\n                                <div class=\"card-content\">\n                                    <div class=\"content\">\n                                        <p class=\"title is-6\">{{ model.name}}</p> \n                                        <span class=\"tag is-primary\">{{ model.model_tye}}</span>\n                                    </div>\n                                </div>\n                            </div> -->\n                            <button class=\"button is-large is-fullwidth\" v-for=\"model in models\" :key=\"model.model_name\" @click=\"openmodelviewer(model.model_id)\">\n                                <div class=\"content\">\n                                <p class=\"title is-6\">{{ model.model_name}} <span class=\"tag is-primary\">{{ model.model_type}}</span> </p> \n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n      </div>\n\n    </div>\n \n  </div>\n</template>\n\n<script>\n/*eslint-disable*/\nimport axios from 'axios';\nimport Header from '@/components/Header.vue';\nimport router from '../router'\n\nexport default {\n  name: 'ModelZoo',\n\n  components: {\n    Header,\n  },\n\n\n  data() {\n    return {\n        searchtext: '',\n        models: []\n    };\n  },\n\n  methods: {\n\n      fetchmodels() {\n        const path = 'http://127.0.0.1' + ':5001/fetchmodelnames';\n        axios.get(path)\n        .then((res) => {\n            this.models = res.data.modelnames\n            console.log(this.models)\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n      },\n\n      openmodelviewer(modelid) {\n        router.push({ name: 'ModelViewer', params: {modelid: modelid}});\n      },\n\n  },\n\n  created() {\n      this.fetchmodels();\n  },\n\n};\n</script>\n\n<style scoped>\ndiv.container {\n      margin-top: 30px;\n    }\n\n.cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 25rem);\n  grid-gap: 1.5rem;\n  justify-content: space-between;\n  align-content: flex-start;\n}\n</style>\n"],"sourceRoot":"src/views"}]}