{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/index.vue","mtime":1623158941886},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qZXNsaW50LWRpc2FibGUqLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgSGVhZGVyIGZyb20gJ0AvY29tcG9uZW50cy9IZWFkZXIudnVlJzsgLy8gaW1wb3J0IGJ1bG1hIGZyb20gJ2J1bG1hJzsKCmltcG9ydCBEb2N1bWVudFZpZXcgZnJvbSAnLi9Eb2N1bWVudFZpZXcudnVlJzsKaW1wb3J0IFBhdGllbnRWaWV3IGZyb20gJy4vUGF0aWVudFZpZXcnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0RhdGFTZWFyY2gnLAogIGNvbXBvbmVudHM6IHsKICAgIEhlYWRlcjogSGVhZGVyLAogICAgRG9jdW1lbnRWaWV3OiBEb2N1bWVudFZpZXcsCiAgICBQYXRpZW50VmlldzogUGF0aWVudFZpZXcKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWFyY2h0ZXh0OiAnJywKICAgICAgaW5kZXg6ICcnLAogICAgICBzZWFyY2hyZXN1bHRzOiBbXSwKICAgICAgbWV0YV9kYXRhOiBbXSwKICAgICAgdG9rZW5zOiBbXSwKICAgICAgZG9jdW1lbnRsZXZlbGFubm90YXRpb25zOiBbXSwKICAgICAgaGl0czogMCwKICAgICAgZnJlZXRleHRtb2RlOiBmYWxzZSwKICAgICAgcGF0aWVudHZpZXdtb2RlOiBmYWxzZSwKICAgICAgZnJlZXRleHRtZXNzYWdlOiAnJywKICAgICAgcGFnaW5hdGlvbjogewogICAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICAgIHZpc2libGVQYWdlczogW10sCiAgICAgICAgbm9PZlBhZ2VzOiAxLAogICAgICAgIHJlc3VsdHNwZXJwYWdlOiAxMCwKICAgICAgICBub09mVmlzaWJsZWJ1dHRvbnM6IDMKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlYXJjaGluZGV4OiBmdW5jdGlvbiBzZWFyY2hpbmRleCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBwYXRoID0gJ2h0dHA6Ly8xMjcuMC4wLjEnICsgJzo1MDAxL3NlYXJjaGluZGV4JzsKCiAgICAgIGlmICh0aGlzLmZyZWV0ZXh0bW9kZSkgewogICAgICAgIHBhdGggPSAnaHR0cDovLzEyNy4wLjAuMScgKyAnOjUwMDEvc2VhcmNoaW5kZXhmcmVldGV4dCc7CiAgICAgIH0KCiAgICAgIGF4aW9zLnBvc3QocGF0aCwgewogICAgICAgICdzZWFyY2hzdHJpbmcnOiB0aGlzLnNlYXJjaHRleHQsCiAgICAgICAgJ2luZGV4JzogdGhpcy5pbmRleCwKICAgICAgICAncGFnZU5vJzogdGhpcy5wYWdpbmF0aW9uLmN1cnJlbnRQYWdlLAogICAgICAgICdyZXN1bHRzcGVycGFnZSc6IHRoaXMucGFnaW5hdGlvbi5yZXN1bHRzcGVycGFnZQogICAgICB9LCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnand0JykKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLnNlYXJjaHJlc3VsdHMgPSByZXMuZGF0YS5yZXN1bHRzWydoaXRzJ107CiAgICAgICAgX3RoaXMuaGl0cyA9IHJlcy5kYXRhLmhpdHM7CiAgICAgICAgX3RoaXMubWV0YV9kYXRhID0gcmVzLmRhdGEubWV0YV9kYXRhOwogICAgICAgIF90aGlzLnRva2VucyA9IHJlcy5kYXRhLnRva2VuczsKICAgICAgICBfdGhpcy5kb2N1bWVudGxldmVsYW5ub3RhdGlvbnMgPSByZXMuZGF0YS5kb2N1bWVudF9sZXZlbF9hbm5vdGF0aW9uczsKICAgICAgICBfdGhpcy5mcmVldGV4dG1lc3NhZ2UgPSByZXMuZGF0YS5yZXN1bHRtZXNzYWdlOyAvLyBzZXQgcGFnaW5hdGlvbiB2YXJpYWJsZXMKCiAgICAgICAgX3RoaXMuaW5pdGlhbGlzZXBhZ2luYXRpb24oKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgIH0pOwogICAgfSwKICAgIGNoYW5nZXRvcGF0aWVudHZpZXc6IGZ1bmN0aW9uIGNoYW5nZXRvcGF0aWVudHZpZXcoKSB7CiAgICAgIHRoaXMucGF0aWVudHZpZXdtb2RlID0gIXRoaXMucGF0aWVudHZpZXdtb2RlOwogICAgfSwKICAgIHdhcm5iZXRhbW9kZTogZnVuY3Rpb24gd2FybmJldGFtb2RlKCkgewogICAgICB0aGlzLmZyZWV0ZXh0bW9kZSA9ICF0aGlzLmZyZWV0ZXh0bW9kZTsKICAgICAgYWxlcnQoJ2V4cGVyaW1lbnRhbCBmZWF0dXJlJyk7CiAgICB9LAogICAgaW5pdGlhbGlzZXBhZ2luYXRpb246IGZ1bmN0aW9uIGluaXRpYWxpc2VwYWdpbmF0aW9uKCkgewogICAgICB0aGlzLnBhZ2luYXRpb24ubm9PZlBhZ2VzID0gTWF0aC5mbG9vcih0aGlzLmhpdHMgLyB0aGlzLnBhZ2luYXRpb24ucmVzdWx0c3BlcnBhZ2UpOwogICAgICB0aGlzLnBhZ2luYXRpb24udmlzaWJsZVBhZ2VzID0gW107CgogICAgICBmb3IgKHZhciBpID0gLTE7IGkgPCBNYXRoLm1pbih0aGlzLnBhZ2luYXRpb24ubm9PZlZpc2libGVidXR0b25zLCB0aGlzLnBhZ2luYXRpb24ubm9PZlBhZ2VzKSAtIDE7IGkrKykgewogICAgICAgIGlmICh0aGlzLnBhZ2luYXRpb24uY3VycmVudFBhZ2UgPT09IDEpIHsKICAgICAgICAgIGlmIChpID09PSAtMSkgewogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMucGFnaW5hdGlvbi52aXNpYmxlUGFnZXMucHVzaCh0aGlzLnBhZ2luYXRpb24uY3VycmVudFBhZ2UgKyBpKTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKHRoaXMucGFnaW5hdGlvbi5jdXJyZW50UGFnZSA9PT0gdGhpcy5wYWdpbmF0aW9uLm5vT2ZQYWdlcykgewogICAgICAgICAgaWYgKGkgPT09IC0xKSB7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy5wYWdpbmF0aW9uLnZpc2libGVQYWdlcy51bnNoaWZ0KHRoaXMucGFnaW5hdGlvbi5jdXJyZW50UGFnZSAtIGkpOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLnBhZ2luYXRpb24udmlzaWJsZVBhZ2VzLnB1c2godGhpcy5wYWdpbmF0aW9uLmN1cnJlbnRQYWdlICsgaSk7CiAgICAgICAgfQoKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnBhZ2luYXRpb24udmlzaWJsZVBhZ2VzLCBpKTsKICAgICAgfQogICAgfSwKICAgIHBhZ2luYXRlOiBmdW5jdGlvbiBwYWdpbmF0ZShuZXdwYWdlTm8pIHsKICAgICAgaWYgKG5ld3BhZ2VObyA8IDEgfHwgbmV3cGFnZU5vID4gdGhpcy5wYWdpbmF0aW9uLm5vT2ZQYWdlcykgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5wYWdpbmF0aW9uLmN1cnJlbnRQYWdlID0gbmV3cGFnZU5vOwogICAgICB0aGlzLnNlYXJjaGluZGV4KCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5pbmRleCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pbmRleDsKICAgIHRoaXMuc2VhcmNoaW5kZXgoKTsKICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<!-- eslint-disable  -->\n  <div>\n    <Header/>\n\n    <div class=\"container\">\n      <div class=\"field has-addons\">\n        <div class=\"control is-expanded\">\n          <input class=\"input is-medium\" @keyup.enter=\"searchindex()\" v-model.lazy=\"searchtext\" type=\"text\" placeholder=\"Type your query here\">\n        </div>\n        <div class=\"control\">\n        <span class=\"select is-medium\" @change=\"warnbetamode()\">\n          <select>\n            <option>kibana query language</option>\n            <option>free text search</option>\n          </select>\n        </span>\n        </div>\n      </div>\n\n      <div class=\"block\">\n            <div class=\"columns\">\n              <div class=\"column is-one-quarter\">\n                <label class=\"checkbox\">\n                  <input type=\"checkbox\" @click=\"changetopatientview()\">PatientView\n                </label>\n\n                <div class=\"box\">\n                      <div class=\"content has-text-left\">\n                        <h3><strong>Index Name: </strong>{{ index }}</h3>\n                        <h3>No of hits: {{ hits }}</h3>\n                      </div>\n                </div>\n                <form class=\"box has-text-left\">\n\n                </form>\n              </div>\n              <div class=\"column\">\n                <div class=\"block\">\n                  <div class=\"card\" v-if=\"freetextmessage!= ''\">\n                    <div class=\"card-content\">\n                      <p class=\"title\" id='freetextmessage'>\n                        {{ freetextmessage }}\n                      </p>\n                    </div>\n                  </div>\n                  <div>\n                    <PatientView v-if=\"patientviewmode\" />  \n                    <DocumentView v-else :test=\"hits\" :searchresults=\"searchresults\" :meta_data=\"meta_data\" :documentlevelannotations=\"documentlevelannotations\" :tokens=\"tokens\" />  \n                  </div>\n                </div>\n                \n                <div class=\"block\">\n                  <nav class=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\n                    <a class=\"pagination-previous\" @click=\"paginate(pagination.currentPage - 1)\">Previous</a>\n                    <a class=\"pagination-next\" @click=\"paginate(pagination.currentPage + 1)\">Next page</a>\n                    <ul class=\"pagination-list\">\n                        <li><a class=\"pagination-link\" @click=\"paginate(1)\" :class = \"(pagination.currentPage === 1) ? 'is-current':'' \">1</a></li>\n                        <span v-if=\"!pagination.visiblePages.includes(1)\" class=\"pagination-ellipsis\">&hellip;</span>\n                        \n                        <li v-for=\"pageNo in pagination.visiblePages\">\n                          <a v-if=\"pageNo != 1 && pageNo != pagination.noOfPages\" class=\"pagination-link\" :class = \"(pageNo === pagination.currentPage) ? 'is-current':'' \" @click=\"paginate(pageNo)\" >{{pageNo}}</a>\n                        </li>\n\n                        <span v-if=\"!pagination.visiblePages.includes(pagination.noOfPages)\" class=\"pagination-ellipsis\">&hellip;</span>\n                        <li><a class=\"pagination-link\" @click=\"paginate(pagination.noOfPages)\" :class = \"(pagination.noOfPages === pagination.currentPage) ? 'is-current':'' \">{{ pagination.noOfPages }}</a></li>\n                      </li>\n                    </ul>\n                  </nav>\n                </div>\n              </div>\n            </div>\n      </div>\n\n\n    </div>\n \n  </div>\n</template>\n\n<script>\n/*eslint-disable*/\nimport axios from 'axios';\nimport Header from '@/components/Header.vue';\n// import bulma from 'bulma';\nimport DocumentView from './DocumentView.vue'\nimport PatientView from './PatientView'\n\nexport default {\n  name: 'DataSearch',\n\n  components: {\n    Header,\n    DocumentView,\n    PatientView,\n  },\n\n\n  data() {\n    return {\n        searchtext: '',\n        index: '',\n        searchresults: [],\n        meta_data: [],\n        tokens: [],\n        documentlevelannotations: [],\n        hits: 0,\n        freetextmode: false,\n        patientviewmode: false,\n        freetextmessage: '',\n        pagination: {\n          currentPage: 1,\n          visiblePages: [],\n          noOfPages: 1,\n          resultsperpage: 10,\n          noOfVisiblebuttons: 3,\n        },\n    };\n  },\n\n  methods: {\n\n      searchindex() {\n        let path = 'http://127.0.0.1' + ':5001/searchindex';\n\n        if (this.freetextmode){\n          path = 'http://127.0.0.1' + ':5001/searchindexfreetext';\n\n        }\n\n        axios.post(path, {'searchstring': this.searchtext, 'index': this.index, 'pageNo': this.pagination.currentPage, 'resultsperpage': this.pagination.resultsperpage}, \n                  {headers: {'Authorization': localStorage.getItem('jwt')}})\n        .then((res) => {\n            this.searchresults = res.data.results['hits']\n            this.hits = res.data.hits\n            this.meta_data = res.data.meta_data\n            this.tokens = res.data.tokens\n            this.documentlevelannotations = res.data.document_level_annotations\n            this.freetextmessage = res.data.resultmessage\n            \n            // set pagination variables\n            this.initialisepagination()\n            \n        })\n        .catch((error) => {\n            console.error(error);\n        });\n      },\n\n      changetopatientview() {\n        this.patientviewmode = !this.patientviewmode\n      },\n\n      warnbetamode() {\n        this.freetextmode = !this.freetextmode\n        alert('experimental feature')\n      },\n\n      initialisepagination() {\n\n            this.pagination.noOfPages = Math.floor(this.hits / this.pagination.resultsperpage)\n            this.pagination.visiblePages = []\n\n            for (let i = -1 ; i < Math.min(this.pagination.noOfVisiblebuttons, this.pagination.noOfPages) - 1; i++){\n              if (this.pagination.currentPage === 1){\n                if (i === -1){\n                  continue\n                }\n                else{\n                  this.pagination.visiblePages.push(this.pagination.currentPage + i);\n                }\n              } \n              else if (this.pagination.currentPage === this.pagination.noOfPages) {\n                if (i === -1){\n                  continue\n                }\n                else{\n                  this.pagination.visiblePages.unshift(this.pagination.currentPage - i);\n                }\n              }\n              else {\n                this.pagination.visiblePages.push(this.pagination.currentPage + i)\n              }\n              console.log(this.pagination.visiblePages, i)\n            }\n      },\n\n      paginate(newpageNo) {\n        if (newpageNo < 1 || newpageNo > this.pagination.noOfPages){\n          return\n        }\n        this.pagination.currentPage = newpageNo\n        this.searchindex()\n      }\n  },\n\n  created() {\n    this.index = this.$route.params.index;\n    this.searchindex();\n  },\n\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped > \ndiv.container {\n      margin-top: 30px;\n    }\ndiv.card {\n  margin-bottom: 15px;\n}\n\nspan.chosen:hover {\n  text-decoration: none;\n  cursor: pointer;\n}\n</style>\n\n<style lang=\"sass\" scoped>\n\n</style>\n"],"sourceRoot":"src/pages/DataSearch"}]}