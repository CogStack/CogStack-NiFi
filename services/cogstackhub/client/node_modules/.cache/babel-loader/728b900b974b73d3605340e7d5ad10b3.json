{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/views/DataSearch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/views/DataSearch.vue","mtime":1618795896622},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qZXNsaW50LWRpc2FibGUqLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgSGVhZGVyIGZyb20gJ0AvY29tcG9uZW50cy9IZWFkZXIudnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEYXRhU2VhcmNoJywKICBjb21wb25lbnRzOiB7CiAgICBIZWFkZXI6IEhlYWRlcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlYXJjaHRleHQ6ICcnLAogICAgICBpbmRleDogJycsCiAgICAgIHNlYXJjaHJlc3VsdHM6IFtdLAogICAgICB0b2tlbnM6IFtdLAogICAgICBwYWdlTm86IDAsCiAgICAgIHJlc3VsdHNwZXJwYWdlOiAxMCwKICAgICAgaGl0czogMCwKICAgICAgZnJlZXRleHRtb2RlOiBmYWxzZSwKICAgICAgZnJlZXRleHRtZXNzYWdlOiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlYXJjaGluZGV4OiBmdW5jdGlvbiBzZWFyY2hpbmRleCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBwYXRoID0gJ2h0dHA6Ly8xMjcuMC4wLjEnICsgJzo1MDAxL3NlYXJjaGluZGV4JzsKCiAgICAgIGlmICh0aGlzLmZyZWV0ZXh0bW9kZSkgewogICAgICAgIHBhdGggPSAnaHR0cDovLzEyNy4wLjAuMScgKyAnOjUwMDEvc2VhcmNoaW5kZXhmcmVldGV4dCc7CiAgICAgIH0KCiAgICAgIGF4aW9zLnBvc3QocGF0aCwgewogICAgICAgICdzZWFyY2hzdHJpbmcnOiB0aGlzLnNlYXJjaHRleHQsCiAgICAgICAgJ2luZGV4JzogdGhpcy5pbmRleCwKICAgICAgICAncGFnZU5vJzogdGhpcy5wYWdlTm8sCiAgICAgICAgJ3Jlc3VsdHNwZXJwYWdlJzogdGhpcy5yZXN1bHRzcGVycGFnZQogICAgICB9LCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnand0JykKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLnNlYXJjaHJlc3VsdHMgPSByZXMuZGF0YS5yZXN1bHRzWydoaXRzJ107CiAgICAgICAgX3RoaXMuaGl0cyA9IHJlcy5kYXRhLnJlc3VsdHNbJ3RvdGFsJ107CiAgICAgICAgX3RoaXMudG9rZW5zID0gcmVzLmRhdGEudG9rZW5zOwogICAgICAgIF90aGlzLmZyZWV0ZXh0bWVzc2FnZSA9IHJlcy5kYXRhLnJlc3VsdG1lc3NhZ2U7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICB3YXJuYmV0YW1vZGU6IGZ1bmN0aW9uIHdhcm5iZXRhbW9kZSgpIHsKICAgICAgdGhpcy5mcmVldGV4dG1vZGUgPSAhdGhpcy5mcmVldGV4dG1vZGU7CiAgICAgIGFsZXJ0KCdleHBlcmltZW50YWwgZmVhdHVyZScpOwogICAgfSwKICAgIGRpc3BsYXlFbnRpdHk6IGZ1bmN0aW9uIGRpc3BsYXlFbnRpdHkodG9rZW4sIGluZGV4KSB7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXNwbGF5ZWRwcmV0dHluYW1lXycgKyBpbmRleCkuaW5uZXJIVE1MID0gdG9rZW5bJ25scF9wcmV0dHlfbmFtZXMnXTsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rpc3BsYXllZGN1aV8nICsgaW5kZXgpLmlubmVySFRNTCA9IHRva2VuWydubHBfY3VpcyddOwogICAgICBjb25zb2xlLmxvZyhkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbm90aWZpY2F0aW9uXycgKyBpbmRleCkpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbm90aWZpY2F0aW9uXycgKyBpbmRleCkuY2xhc3NMaXN0LnJlbW92ZSgiaXMtaGlkZGVuIik7CiAgICB9LAogICAgaGlkZURpc3BsYXlFbnRpdHk6IGZ1bmN0aW9uIGhpZGVEaXNwbGF5RW50aXR5KGluZGV4KSB7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdub3RpZmljYXRpb25fJyArIGluZGV4KS5jbGFzc0xpc3QuYWRkKCJpcy1oaWRkZW4iKTsKICAgIH0sCiAgICBwYWdpbmF0ZTogZnVuY3Rpb24gcGFnaW5hdGUobmV3cGFnZU5vKSB7CiAgICAgIHRoaXMucGFnZU5vID0gbmV3cGFnZU5vOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuaW5kZXggPSB0aGlzLiRyb3V0ZS5wYXJhbXMuaW5kZXg7CiAgICB0aGlzLnNlYXJjaGluZGV4KCk7CiAgfQp9Ow=="},{"version":3,"sources":["DataSearch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,yBAAA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAHA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,aAAA,EAAA,EAHA;AAIA,MAAA,MAAA,EAAA,EAJA;AAKA,MAAA,MAAA,EAAA,CALA;AAMA,MAAA,cAAA,EAAA,EANA;AAOA,MAAA,IAAA,EAAA,CAPA;AAQA,MAAA,YAAA,EAAA,KARA;AASA,MAAA,eAAA,EAAA;AATA,KAAA;AAWA,GApBA;AAsBA,EAAA,OAAA,EAAA;AAEA,IAAA,WAFA,yBAEA;AAAA;;AACA,UAAA,IAAA,GAAA,qBAAA,mBAAA;;AAEA,UAAA,KAAA,YAAA,EAAA;AACA,QAAA,IAAA,GAAA,qBAAA,2BAAA;AAEA;;AAEA,MAAA,KAAA,CAAA,IAAA,CAAA,IAAA,EAAA;AAAA,wBAAA,KAAA,UAAA;AAAA,iBAAA,KAAA,KAAA;AAAA,kBAAA,KAAA,MAAA;AAAA,0BAAA,KAAA;AAAA,OAAA,EACA;AAAA,QAAA,OAAA,EAAA;AAAA,2BAAA,YAAA,CAAA,OAAA,CAAA,KAAA;AAAA;AAAA,OADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,aAAA,GAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,MAAA,CAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,GAAA,CAAA,IAAA,CAAA,MAAA;AACA,QAAA,KAAA,CAAA,eAAA,GAAA,GAAA,CAAA,IAAA,CAAA,aAAA;AACA,OAPA,EAQA,KARA,CAQA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,KAAA;AACA,OAVA;AAWA,KArBA;AAuBA,IAAA,YAvBA,0BAuBA;AACA,WAAA,YAAA,GAAA,CAAA,KAAA,YAAA;AACA,MAAA,KAAA,CAAA,sBAAA,CAAA;AACA,KA1BA;AA4BA,IAAA,aA5BA,yBA4BA,KA5BA,EA4BA,KA5BA,EA4BA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,yBAAA,KAAA,EAAA,SAAA,GAAA,KAAA,CAAA,kBAAA,CAAA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,kBAAA,KAAA,EAAA,SAAA,GAAA,KAAA,CAAA,UAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,cAAA,CAAA,kBAAA,KAAA,CAAA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,kBAAA,KAAA,EAAA,SAAA,CAAA,MAAA,CAAA,WAAA;AACA,KAjCA;AAmCA,IAAA,iBAnCA,6BAmCA,KAnCA,EAmCA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,kBAAA,KAAA,EAAA,SAAA,CAAA,GAAA,CAAA,WAAA;AACA,KArCA;AAuCA,IAAA,QAvCA,oBAuCA,SAvCA,EAuCA;AACA,WAAA,MAAA,GAAA,SAAA;AAEA;AA1CA,GAtBA;AAmEA,EAAA,OAnEA,qBAmEA;AACA,SAAA,KAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KAAA;AACA,SAAA,WAAA;AACA;AAtEA,CAAA","sourcesContent":["<template>\n<!-- eslint-disable  -->\n  <div>\n    <Header/>\n    <div class=\"container\">\n      <div class=\"field has-addons\">\n        <div class=\"control is-expanded\">\n          <input class=\"input is-medium\" @keyup.enter=\"searchindex()\" v-model.lazy=\"searchtext\" type=\"text\" placeholder=\"Type your query here\">\n        </div>\n        <div class=\"control\">\n        <span class=\"select is-medium\" @change=\"warnbetamode()\">\n          <select>\n            <option>kibana query language</option>\n            <option>free text search</option>\n          </select>\n        </span>\n        </div>\n      </div>\n\n      <div class=\"block\">\n            <div class=\"columns\">\n              <div class=\"column is-one-quarter\">\n                <div class=\"box\">\n                        <div class=\"content\">\n                        <h2><strong>Index Name: </strong>{{ index }}</h2>\n                        <h3>No of hits: {{ hits }}</h3>\n                      </div>\n                </div>\n              </div>\n              <div class=\"column\">\n                <div class=\"block\">\n                  <div class=\"card\" v-if=\"freetextmessage!= ''\">\n                    <div class=\"card-content\">\n                      <p class=\"title\" id='freetextmessage'>\n                        “{{ freetextmessage }}”\n                      </p>\n                    </div>\n                  </div>\n                  <div class=\"card has-text-left\" v-for=\"(result, index) in searchresults\" :key=\"result._id\">\n                    <div class=\"notification is-info is-hidden\" :id=\"'notification_' + index\" >\n                      <button class=\"delete\" @click=\"hideDisplayEntity(index)\"></button>\n                      <div><strong>Label: </strong> </div>\n                      <div>PrettyName: <span :id=\"'displayedprettyname_' + index\" class=\"tag\"></span></div>\n                      <div>CUI: <span :id=\"'displayedcui_' + index\" class=\"tag\"></span></div>\n                      <div><strong>Meta-tags: </strong></div>\n                    </div>\n                    <div class=\"card-content\">\n                      <p><strong>patient: </strong> {{result._source['patient']}}</p>\n                      <p><strong>id: </strong> {{result._id}}</p>\n                      <!-- <div class=\"content\">\n                         <strong>note: </strong> {{result._source['note'].slice(0,1000)}} ...\n                      </div> -->\n                      <div class=\"content\">\n                        <strong>note: </strong>\n                        <span v-for=\"(token,token_idx) in tokens[index]\">\n                          <span v-if=\"token['annotated']\" :id=\"index + '_' + token_idx\"  class=\"tag is-info chosen is-medium\" @click=\"displayEntity(token, index)\">\n                              {{ result._source['note'].slice(token['start'],token['end']) }} \n                          </span>\n                          <span v-else>\n                              {{ result._source['note'].slice(token['start'],token['end']) }} \n                          </span>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div class=\"block\">\n                  <nav class=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\n                    <a class=\"pagination-previous\">Previous</a>\n                    <a class=\"pagination-next\">Next page</a>\n                    <ul class=\"pagination-list\">\n                      <li><a class=\"pagination-link\" aria-label=\"Goto page 1\">1</a></li>\n                      <li><span class=\"pagination-ellipsis\">&hellip;</span></li>\n                      <li><a class=\"pagination-link\" aria-label=\"Goto page 45\">45</a></li>\n                      <li><a class=\"pagination-link is-current\" aria-label=\"Page 46\" aria-current=\"page\">46</a></li>\n                      <li><a class=\"pagination-link\" aria-label=\"Goto page 47\">47</a></li>\n                      <li><span class=\"pagination-ellipsis\">&hellip;</span></li>\n                      <li><a class=\"pagination-link\" aria-label=\"Goto page 86\">86</a></li>\n                    </ul>\n                  </nav>\n                </div>\n\n              </div>\n            </div>\n      </div>\n\n\n    </div>\n \n  </div>\n</template>\n\n<script>\n/*eslint-disable*/\nimport axios from 'axios';\nimport Header from '@/components/Header.vue';\n\n\nexport default {\n  name: 'DataSearch',\n\n  components: {\n    Header,\n  },\n\n\n  data() {\n    return {\n        searchtext: '',\n        index: '',\n        searchresults: [],\n        tokens: [],\n        pageNo: 0,\n        resultsperpage: 10,\n        hits: 0,\n        freetextmode: false,\n        freetextmessage: '',\n    };\n  },\n\n  methods: {\n\n      searchindex() {\n        let path = 'http://127.0.0.1' + ':5001/searchindex';\n\n        if (this.freetextmode){\n          path = 'http://127.0.0.1' + ':5001/searchindexfreetext';\n\n        }\n\n        axios.post(path, {'searchstring': this.searchtext, 'index': this.index, 'pageNo': this.pageNo, 'resultsperpage': this.resultsperpage}, \n                  {headers: {'Authorization': localStorage.getItem('jwt')}})\n        .then((res) => {\n            this.searchresults = res.data.results['hits']\n            this.hits = res.data.results['total']\n            this.tokens = res.data.tokens\n            this.freetextmessage = res.data.resultmessage\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n      },\n\n      warnbetamode() {\n        this.freetextmode = !this.freetextmode\n        alert('experimental feature')\n      },\n\n      displayEntity(token, index) {\n        document.getElementById('displayedprettyname_' + index).innerHTML = token['nlp_pretty_names'];\n        document.getElementById('displayedcui_' + index).innerHTML = token['nlp_cuis'];\n        console.log(document.getElementById('notification_' + index))\n        document.getElementById('notification_' + index).classList.remove(\"is-hidden\");\n      },\n\n      hideDisplayEntity(index) {\n        document.getElementById('notification_' + index).classList.add(\"is-hidden\");\n      },\n\n      paginate(newpageNo) {\n        this.pageNo = newpageNo\n        \n      }\n  },\n\n  created() {\n    this.index = this.$route.params.index;\n    this.searchindex();\n  },\n\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ndiv.container {\n      margin-top: 30px;\n    }\ndiv.card {\n  margin-bottom: 15px;\n}\n\nspan.chosen:hover {\n  text-decoration: none;\n  cursor: pointer;\n}\n\n</style>\n"],"sourceRoot":"src/views"}]}