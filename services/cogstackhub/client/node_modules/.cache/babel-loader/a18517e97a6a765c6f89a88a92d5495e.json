{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/PatientView/PatientView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/PatientView/PatientView.vue","mtime":1637018815604},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qZXNsaW50LWRpc2FibGUqLwppbXBvcnQgRG9jdW1lbnRzVmlldyBmcm9tICdAL2NvbXBvbmVudHMvRG9jdW1lbnRzVmlldy9Eb2N1bWVudHNWaWV3LnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUGF0aWVudFZpZXcnLAogIGNvbXBvbmVudHM6IHsKICAgIERvY3VtZW50c1ZpZXc6IERvY3VtZW50c1ZpZXcKICB9LAogIHByb3BzOiB7CiAgICBwYXRpZW50OiBTdHJpbmcsCiAgICBzZWFyY2hyZXN1bHRzOiBbXQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbHVtbnNDb25jZXB0czogW3sKICAgICAgICBmaWVsZDogJ25scF9jb25jZXB0X2lkcycsCiAgICAgICAgbGFiZWw6ICdjb25jZXB0X2lkJywKICAgICAgICBzZWFyY2hhYmxlOiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBmaWVsZDogJ25scF9wcmV0dHlfbmFtZXMnLAogICAgICAgIGxhYmVsOiAnbmFtZScsCiAgICAgICAgc2VhcmNoYWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAgZmllbGQ6ICdkYXRlJywKICAgICAgICBsYWJlbDogJ2RhdGUnLAogICAgICAgIHNlYXJjaGFibGU6IHRydWUsCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGZpZWxkOiAncHJpb3JpdHknLAogICAgICAgIGxhYmVsOiAncHJpb3JpdHknLAogICAgICAgIHNlYXJjaGFibGU6IHRydWUsCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfV0sCiAgICAgIGNvbHVtbnNHcm91cGVkQ29uY2VwdHM6IFt7CiAgICAgICAgZmllbGQ6ICdubHBfY29uY2VwdF9pZHMnLAogICAgICAgIGxhYmVsOiAnY29uY2VwdF9pZCcsCiAgICAgICAgc2VhcmNoYWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAgZmllbGQ6ICdubHBfcHJldHR5X25hbWVzJywKICAgICAgICBsYWJlbDogJ25hbWUnLAogICAgICAgIHNlYXJjaGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGZpZWxkOiAncHJpb3JpdHknLAogICAgICAgIGxhYmVsOiAncHJpb3JpdHknLAogICAgICAgIHNlYXJjaGFibGU6IHRydWUsCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfV0sCiAgICAgIGNvbHVtbnNtZXRhZGF0YTogW3sKICAgICAgICBmaWVsZDogJ2RvY3VtZW50X2lkeCcsCiAgICAgICAgbGFiZWw6ICdkb2Mgbm8nLAogICAgICAgIHNlYXJjaGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGZpZWxkOiAnZGF0ZScsCiAgICAgICAgbGFiZWw6ICdkYXRlJywKICAgICAgICBzZWFyY2hhYmxlOiB0cnVlLAogICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBmaWVsZDogJ2RvY3VtZW50X3R5cGUnLAogICAgICAgIGxhYmVsOiAnZG9jdW1lbnRfdHlwZScsCiAgICAgICAgc2VhcmNoYWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAgZmllbGQ6ICdubHBfcHJldHR5X25hbWVzJywKICAgICAgICBsYWJlbDogJ25scF9wcmV0dHlfbmFtZScsCiAgICAgICAgc2VhcmNoYWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAgZmllbGQ6ICdubHBfY29uY2VwdF9pZHMnLAogICAgICAgIGxhYmVsOiAnbmxwX2NvbmNlcHRfaWQnLAogICAgICAgIHNlYXJjaGFibGU6IHRydWUKICAgICAgfV0sCiAgICAgIHN0aWNreUhlYWRlcnM6IHRydWUsCiAgICAgIHNlbGVjdE1vZGU6ICdtdWx0aScsCiAgICAgIHNlbGVjdGVkOiBbXSwKICAgICAgc2VsZWN0ZWRNZXRhOiBbXSwKICAgICAgZ3JvdXBDb25jZXB0czogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBkaXNwbGF5RW50aXR5OiBmdW5jdGlvbiBkaXNwbGF5RW50aXR5KHRva2VuLCBpbmRleCkgewogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGlzcGxheWVkcHJldHR5bmFtZV8nICsgaW5kZXgpLmlubmVySFRNTCA9IHRva2VuWydubHBfcHJldHR5X25hbWVzJ107CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXNwbGF5ZWRjb25jZXB0aWRfJyArIGluZGV4KS5pbm5lckhUTUwgPSB0b2tlblsnbmxwX2NvbmNlcHRfaWRzJ107CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXNwbGF5ZWRtb2RlbGlkXycgKyBpbmRleCkuaW5uZXJIVE1MID0gdG9rZW5bJ25scF9tb2RlbGlkcyddOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbm90aWZpY2F0aW9uXycgKyBpbmRleCkuY2xhc3NMaXN0LnJlbW92ZSgiaXMtaGlkZGVuIik7CiAgICB9LAogICAgaGlkZURpc3BsYXlFbnRpdHk6IGZ1bmN0aW9uIGhpZGVEaXNwbGF5RW50aXR5KGluZGV4KSB7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdub3RpZmljYXRpb25fJyArIGluZGV4KS5jbGFzc0xpc3QuYWRkKCJpcy1oaWRkZW4iKTsKICAgIH0sCiAgICBvblJvd1NlbGVjdGVkOiBmdW5jdGlvbiBvblJvd1NlbGVjdGVkKGl0ZW1zKSB7CiAgICAgIGFsZXJ0KCdoZWxsbycpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHt9Cn07"},{"version":3,"sources":["PatientView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<!-- eslint-disable  -->\n<div>\n    <!-- this is for a view of all of the patients labels (set) -->\n    <div class=\"card\" id=\"patient-summary\">\n        <header class=\"card-header\">\n            <p class=\"card-header-title\">\n            Patient Summary \n            </p>\n        </header> \n        <div class=\"card-content\" >\n            <div class=\"columns\">\n                <div class=\"column is-one-quarter\">\n                    <div class=\"has-text-left\"><strong>primarypatientmrn</strong></div>\n                </div>\n                <div class=\"column has-text-left\"> {{ patient }}</div>\n            </div>\n            <!-- <div class=\"columns\">\n                <div class=\"column is-one-quarter\">\n                    <div class=\"has-text-left\"><strong>nlp labels</strong></div>\n                </div>\n                <div class=\"column has-text-left\">\n\n                    <b-field grouped group-multiline>\n                        <div class=\"control\">\n                            <b-switch v-model=\"groupConcepts\">Show unique concepts</b-switch>\n                        </div>\n                    </b-field>\n\n                    <b-tabs>\n                        <b-tab-item v-if=\"!groupConcepts\" label=\"All Concepts\">\n                                        <b-table\n                                            :data=\"patientLevelAnnotations.span_annotations\"\n                                            :columns=\"columnsConcepts\"\n                                            :sticky-header=\"stickyHeaders\"\n                                            :selected.sync=\"selectedMeta\"\n                                            focusable>\n                                        </b-table>\n                        </b-tab-item>\n                        <b-tab-item v-if=\"groupConcepts\" label=\"Grouped Concepts\">\n                                        <b-table\n                                            :data=\"patientLevelAnnotations.grouped_span_annotations\"\n                                            :columns=\"columnsGroupedConcepts\"\n                                            :sticky-header=\"stickyHeaders\"\n                                            :selected.sync=\"selected\"\n                                            focusable>\n                                        </b-table>\n                        </b-tab-item>\n                        <b-tab-item v-if=\"selected.length != 0 && groupConcepts\" label=\"Selected\">\n                                        <b-table\n                                            :data=\"selected.meta_data\"\n                                            :columns=\"columnsmetadata\"\n                                            :sticky-header=\"stickyHeaders\"\n                                            :selected.sync=\"selectedMeta\"\n                                            focusable>\n                                        </b-table>\n                        </b-tab-item>\n                        <b-tab-item v-if=\"selectedMeta.length != 0\"  label=\"Document\">\n                            <div class=\"card-content\">\n                            <div class=\"content\">\n                                <span v-for=\"(token,token_idx) in tokens[selectedMeta.document_idx] \">\n                                    <span v-html=\"searchresults[selectedMeta.document_idx]._source['note'].slice(token['start'],token['end'])\" v-if=\"selectedMeta.start == token['start'] && selectedMeta.end == token['end']\"  class=\"tag is-warning chosen is-medium\" />\n                                    <span v-html=\"searchresults[selectedMeta.document_idx]._source['note'].slice(token['start'],token['end'])\" v-else />{{ ' ' }}\n                                </span>\n                            </div>\n                            </div>\n                        </b-tab-item>\n                    </b-tabs>\n                </div>\n            </div> -->\n        </div>\n    </div>\n\n</div>\n\n   \n\n</template>\n\n<script>\n/*eslint-disable*/\nimport DocumentsView from '@/components/DocumentsView/DocumentsView.vue'\n\nexport default {\n  name: 'PatientView',\n\n  components: {\n    DocumentsView,\n  },\n\n  props: {\n      patient: String,\n      searchresults: [],\n  },\n\n  data() {\n\n    return {\n                columnsConcepts: [\n                    {\n                        field: 'nlp_concept_ids',\n                        label: 'concept_id',\n                        searchable: true,\n                    },\n                    {\n                        field: 'nlp_pretty_names',\n                        label: 'name',\n                        searchable: true,\n                    },\n                    {\n                        field: 'date',\n                        label: 'date',\n                        searchable: true,\n                        sortable: true,\n                    },\n                    {\n                        field: 'priority',\n                        label: 'priority',\n                        searchable: true,\n                        sortable: true,\n                    }\n                ],\n                columnsGroupedConcepts: [\n                    {\n                        field: 'nlp_concept_ids',\n                        label: 'concept_id',\n                        searchable: true,\n                    },\n                    {\n                        field: 'nlp_pretty_names',\n                        label: 'name',\n                        searchable: true,\n                    },\n                    {\n                        field: 'priority',\n                        label: 'priority',\n                        searchable: true,\n                        sortable: true,\n                    }\n                ],\n                columnsmetadata: [\n                    {\n                        field: 'document_idx',\n                        label: 'doc no',\n                        searchable: true,\n                    },                   \n                    {\n                        field: 'date',\n                        label: 'date',\n                        searchable: true,\n                        sortable: true,\n                    },\n                    {\n                        field: 'document_type',\n                        label: 'document_type',\n                        searchable: true,\n                    },\n                    {\n                        field: 'nlp_pretty_names',\n                        label: 'nlp_pretty_name',\n                        searchable: true,\n                    },\n                    {\n                        field: 'nlp_concept_ids',\n                        label: 'nlp_concept_id',\n                        searchable: true,\n                    },\n                ],\n                stickyHeaders: true,\n                selectMode: 'multi',\n                selected: [],\n                selectedMeta: [],\n                groupConcepts: false,\n    };\n  },\n\n  methods: {\n\n      displayEntity(token, index) {\n        document.getElementById('displayedprettyname_' + index).innerHTML = token['nlp_pretty_names'];\n        document.getElementById('displayedconceptid_' + index).innerHTML = token['nlp_concept_ids'];\n        document.getElementById('displayedmodelid_' + index).innerHTML = token['nlp_modelids'];\n        document.getElementById('notification_' + index).classList.remove(\"is-hidden\");\n      },\n\n      hideDisplayEntity(index) {\n        document.getElementById('notification_' + index).classList.add(\"is-hidden\");\n      },\n\n      onRowSelected(items) {\n        alert('hello')\n      },\n\n  },\n\n  created() {\n  },\n\n};\n</script>\n\n<style scoped > \ndiv.container {\n      margin-top: 30px;\n    }\ndiv.card {\n  margin-bottom: 15px;\n}\n\nspan.chosen:hover {\n  text-decoration: none;\n  cursor: pointer;\n}\n</style>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped > \n\n</style>\n\n"],"sourceRoot":"src/pages/DataSearch/PatientView"}]}