{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/views/DataSearch.vue?vue&type=style&index=0&id=106142ac&scoped=true&lang=css&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/views/DataSearch.vue","mtime":1618795896622},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpkaXYuY29udGFpbmVyIHsKICAgICAgbWFyZ2luLXRvcDogMzBweDsKICAgIH0KZGl2LmNhcmQgewogIG1hcmdpbi1ib3R0b206IDE1cHg7Cn0KCnNwYW4uY2hvc2VuOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgY3Vyc29yOiBwb2ludGVyOwp9Cgo="},{"version":3,"sources":["DataSearch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"DataSearch.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<!-- eslint-disable  -->\n  <div>\n    <Header/>\n    <div class=\"container\">\n      <div class=\"field has-addons\">\n        <div class=\"control is-expanded\">\n          <input class=\"input is-medium\" @keyup.enter=\"searchindex()\" v-model.lazy=\"searchtext\" type=\"text\" placeholder=\"Type your query here\">\n        </div>\n        <div class=\"control\">\n        <span class=\"select is-medium\" @change=\"warnbetamode()\">\n          <select>\n            <option>kibana query language</option>\n            <option>free text search</option>\n          </select>\n        </span>\n        </div>\n      </div>\n\n      <div class=\"block\">\n            <div class=\"columns\">\n              <div class=\"column is-one-quarter\">\n                <div class=\"box\">\n                        <div class=\"content\">\n                        <h2><strong>Index Name: </strong>{{ index }}</h2>\n                        <h3>No of hits: {{ hits }}</h3>\n                      </div>\n                </div>\n              </div>\n              <div class=\"column\">\n                <div class=\"block\">\n                  <div class=\"card\" v-if=\"freetextmessage!= ''\">\n                    <div class=\"card-content\">\n                      <p class=\"title\" id='freetextmessage'>\n                        “{{ freetextmessage }}”\n                      </p>\n                    </div>\n                  </div>\n                  <div class=\"card has-text-left\" v-for=\"(result, index) in searchresults\" :key=\"result._id\">\n                    <div class=\"notification is-info is-hidden\" :id=\"'notification_' + index\" >\n                      <button class=\"delete\" @click=\"hideDisplayEntity(index)\"></button>\n                      <div><strong>Label: </strong> </div>\n                      <div>PrettyName: <span :id=\"'displayedprettyname_' + index\" class=\"tag\"></span></div>\n                      <div>CUI: <span :id=\"'displayedcui_' + index\" class=\"tag\"></span></div>\n                      <div><strong>Meta-tags: </strong></div>\n                    </div>\n                    <div class=\"card-content\">\n                      <p><strong>patient: </strong> {{result._source['patient']}}</p>\n                      <p><strong>id: </strong> {{result._id}}</p>\n                      <!-- <div class=\"content\">\n                         <strong>note: </strong> {{result._source['note'].slice(0,1000)}} ...\n                      </div> -->\n                      <div class=\"content\">\n                        <strong>note: </strong>\n                        <span v-for=\"(token,token_idx) in tokens[index]\">\n                          <span v-if=\"token['annotated']\" :id=\"index + '_' + token_idx\"  class=\"tag is-info chosen is-medium\" @click=\"displayEntity(token, index)\">\n                              {{ result._source['note'].slice(token['start'],token['end']) }} \n                          </span>\n                          <span v-else>\n                              {{ result._source['note'].slice(token['start'],token['end']) }} \n                          </span>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div class=\"block\">\n                  <nav class=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\n                    <a class=\"pagination-previous\">Previous</a>\n                    <a class=\"pagination-next\">Next page</a>\n                    <ul class=\"pagination-list\">\n                      <li><a class=\"pagination-link\" aria-label=\"Goto page 1\">1</a></li>\n                      <li><span class=\"pagination-ellipsis\">&hellip;</span></li>\n                      <li><a class=\"pagination-link\" aria-label=\"Goto page 45\">45</a></li>\n                      <li><a class=\"pagination-link is-current\" aria-label=\"Page 46\" aria-current=\"page\">46</a></li>\n                      <li><a class=\"pagination-link\" aria-label=\"Goto page 47\">47</a></li>\n                      <li><span class=\"pagination-ellipsis\">&hellip;</span></li>\n                      <li><a class=\"pagination-link\" aria-label=\"Goto page 86\">86</a></li>\n                    </ul>\n                  </nav>\n                </div>\n\n              </div>\n            </div>\n      </div>\n\n\n    </div>\n \n  </div>\n</template>\n\n<script>\n/*eslint-disable*/\nimport axios from 'axios';\nimport Header from '@/components/Header.vue';\n\n\nexport default {\n  name: 'DataSearch',\n\n  components: {\n    Header,\n  },\n\n\n  data() {\n    return {\n        searchtext: '',\n        index: '',\n        searchresults: [],\n        tokens: [],\n        pageNo: 0,\n        resultsperpage: 10,\n        hits: 0,\n        freetextmode: false,\n        freetextmessage: '',\n    };\n  },\n\n  methods: {\n\n      searchindex() {\n        let path = 'http://127.0.0.1' + ':5001/searchindex';\n\n        if (this.freetextmode){\n          path = 'http://127.0.0.1' + ':5001/searchindexfreetext';\n\n        }\n\n        axios.post(path, {'searchstring': this.searchtext, 'index': this.index, 'pageNo': this.pageNo, 'resultsperpage': this.resultsperpage}, \n                  {headers: {'Authorization': localStorage.getItem('jwt')}})\n        .then((res) => {\n            this.searchresults = res.data.results['hits']\n            this.hits = res.data.results['total']\n            this.tokens = res.data.tokens\n            this.freetextmessage = res.data.resultmessage\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n      },\n\n      warnbetamode() {\n        this.freetextmode = !this.freetextmode\n        alert('experimental feature')\n      },\n\n      displayEntity(token, index) {\n        document.getElementById('displayedprettyname_' + index).innerHTML = token['nlp_pretty_names'];\n        document.getElementById('displayedcui_' + index).innerHTML = token['nlp_cuis'];\n        console.log(document.getElementById('notification_' + index))\n        document.getElementById('notification_' + index).classList.remove(\"is-hidden\");\n      },\n\n      hideDisplayEntity(index) {\n        document.getElementById('notification_' + index).classList.add(\"is-hidden\");\n      },\n\n      paginate(newpageNo) {\n        this.pageNo = newpageNo\n        \n      }\n  },\n\n  created() {\n    this.index = this.$route.params.index;\n    this.searchindex();\n  },\n\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ndiv.container {\n      margin-top: 30px;\n    }\ndiv.card {\n  margin-bottom: 15px;\n}\n\nspan.chosen:hover {\n  text-decoration: none;\n  cursor: pointer;\n}\n\n</style>\n"]}]}