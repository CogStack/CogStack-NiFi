{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-2-bulma-pagination/src/Pagination.vue?vue&type=style&index=0&lang=sass&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-2-bulma-pagination/src/Pagination.vue","mtime":1516733333000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/sass-loader/lib/loader.js","mtime":1486564550000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAifmJ1bG1hL3Nhc3MvdXRpbGl0aWVzL19hbGwiCkBpbXBvcnQgIn5idWxtYS9zYXNzL2NvbXBvbmVudHMvcGFnaW5hdGlvbiIK"},{"version":3,"sources":["Pagination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA","file":"Pagination.vue","sourceRoot":"node_modules/vue-2-bulma-pagination/src","sourcesContent":["<template>\n  <div id=\"pagination\">\n    <nav class=\"pagination is-centered\">\n      <a class=\"pagination-previous\" v-if=\"current > 1\" @click=\"onChange(current - 1)\">&larr; Previous</a>\n      <a class=\"pagination-next\" v-if=\"size > 1 && current < size\" @click=\"onChange(current + 1)\">Next &rarr;</a>\n      <ul class=\"pagination-list\">\n        <component v-for=\"element in elements\" :key=\"element\"  :is=\"element.type\" :page=\"element.page\" :current=\"current\" :onChange=\"onChange\"/>\n      </ul>\n    </nav>\n  </div>\n</template>\n\n<script>\nimport Page from './Page.vue'\nimport EllipseBreak from './EllipseBreak.vue'\n\nexport default {\n  name: 'pagination',\n  components: { Page, EllipseBreak },\n  props: {\n    current: {\n      type: Number\n    },\n    total: {\n      type: Number,\n      default: 0\n    },\n    itemsPerPage: {\n      type: Number\n    },\n    step: {\n      type: Number,\n      default: 3\n    },\n    onChange: {\n      type: Function\n    }\n  },\n  data () {\n    return {\n      elements: [],\n      size: 0\n    }\n  },\n  mounted () {\n    this.paginate()\n    // Check for changes in props resulting from asynchronous operations\n    Object.keys(this._props).forEach(event => {\n      this.$watch(event, (val, oldVal) => {\n        this.paginate()\n      });\n    })\n  },\n  methods: {\n    add (s, f) {\n      for (var i = s; i < f; i++) {\n        this.elements.push(\n          { type: 'page', page: i }\n        )\n      }\n    },\n    first () {\n      // Add first page with separator\n      this.elements.push(\n        { type: 'page', page: 1 },\n        { type: 'ellipse-break' }\n      )\n    },\n    last () {\n      // Add last page with separator\n      this.elements.push(\n        { type: 'ellipse-break' },\n        { type: 'page', page: this.size },\n      )\n    },\n    paginate () {\n      this.elements = []\n      this.size = Math.ceil(this.total/this.itemsPerPage)\n\n      if (this.size < this.step * 2 + 6) {\n        // Case without any ellipse breaks\n        this.add(1, this.size + 1);\n      }\n      else if (this.current < this.step * 2 + 1) {\n        // Case with ellipse breaks at end\n        this.add(1, this.step * 2 + 4);\n        this.last();\n      }\n      else if (this.current > this.size - this.step * 2) {\n        // Case with ellipse breaks at beginning\n        this.first();\n        this.add(this.size - this.step * 2 - 2, this.size + 1);\n      }\n      else {\n        // Case with ellipse breaks at beginning and end\n        this.first();\n        this.add(this.current - this.step, this.current + this.step + 1);\n        this.last();\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"sass\">\n@import \"~bulma/sass/utilities/_all\"\n@import \"~bulma/sass/components/pagination\"\n</style>\n"]}]}