{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/ModelViewer.vue?vue&type=template&id=a849dbb2&scoped=true&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/ModelViewer.vue","mtime":1623242383831},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjwhLS0gZXNsaW50LWRpc2FibGUgIC0tPgogIDxkaXY+CiAgICA8SGVhZGVyLz4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJ0aXRsZSBpcy0yIj57eyBtb2RlbGNhcmRbJ21vZGVsX25hbWUnXX19IDwvcD4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0idGFicyBpcy1jZW50ZXJlZCI+CiAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgaWQ9J21vZGVsdGFiJyBjbGFzcz0iaXMtYWN0aXZlIj48YSBAY2xpY2s9ImdvdG9tb2RlbHRhYigpIj5Nb2RlbCBJbmZvPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaSBpZD0ndXNlbW9kZWx0YWInPjxhIEBjbGljaz0iZ290b3VzZW1vZGVsdGFiKCkiPlVzZSBNb2RlbDwvYT48L2xpPgogICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDwhLS0gdGhpcyBpcyBmb3IgdGhlIG1vZGVsIHRhYiAgLS0+CiAgICAgICAgPGRpdiBjbGFzcz0idGlsZSBpcy1hbmNlc3RvciIgdi1pZj0iY3VycmVudFRhYiA9PT0gJ21vZGVsaW5mbyciPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aWxlIGlzLXBhcmVudCBpcy12ZXJ0aWNhbCBoYXMtdGV4dC1sZWZ0IGlzLTQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGlsZSBpcy1jaGlsZCBib3ggbm90aWZpY2F0aW9uIGlzLWluZm8iPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0aXRsZSBpcy0zIGhhcy10ZXh0LWNlbnRlcmVkIj4gTW9kZWwgQ2FyZDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGl0bGUgaXMtNSI+PHN0cm9uZz5tb2RlbCB0eXBlOiA8L3N0cm9uZz48L3A+IAogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0aXRsZSBpcy02Ij48Y29kZT57eyB9fTwvY29kZT48L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRpdGxlIGlzLTUiPjxzdHJvbmc+JiN4MUY0NzQ7IHBhcmVudCBtb2RlbDogPC9zdHJvbmc+PC9wPiAKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGl0bGUgaXMtNiIgPjxjb2RlPnt7ICB9fTwvY29kZT48L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRpdGxlIGlzLTUiPjxzdHJvbmc+dHJhaW5pbmcgZGF0YXNldHM6IDwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9InRhYmxlIGlzLWJvcmRlcmVkIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoZWFkPgogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+PHN0cm9uZz51bnN1cGVydmlzZWQ8L3N0cm9uZz48L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPjxzdHJvbmc+c3VwZXJpdnNlZCA8L3N0cm9uZz48L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48cCBjbGFzcz0idGl0bGUgaXMtNiI+PGNvZGU+e3sgIH19PC9jb2RlPjwvcD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxwIGNsYXNzPSJ0aXRsZSBpcy02Ij48Y29kZT57eyAgfX08L2NvZGU+PC9wPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRpdGxlIGlzLTUiPjxzdHJvbmc+ICYjeDFGM0M2OyBwZXJmb3JtYW5jZTogPC9zdHJvbmc+PC9wPgogICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0idGFibGUgaXMtYm9yZGVyZWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoZWFkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD48c3Ryb25nPmYxPC9zdHJvbmc+PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+PHN0cm9uZz5wcmVjaXNpb24gPC9zdHJvbmc+PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+PHN0cm9uZz5yZWNhbGwgPC9zdHJvbmc+PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48cCBjbGFzcz0idGl0bGUgaXMtNiI+PGNvZGU+e3sgIH19PC9jb2RlPjwvcD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48cCBjbGFzcz0idGl0bGUgaXMtNiI+PGNvZGU+e3sgIH19PC9jb2RlPjwvcD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48cCBjbGFzcz0idGl0bGUgaXMtNiI+PGNvZGU+e3sgIH19PC9jb2RlPjwvcD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+CgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0aXRsZSBpcy01Ij48c3Ryb25nPm9udG9sb2d5OiA8L3N0cm9uZz48L3A+CiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJ0YWJsZSBpcy1ib3JkZXJlZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPjxzdHJvbmc+bmFtZTwvc3Ryb25nPjwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPjxzdHJvbmc+dmVyc2lvbiA8L3N0cm9uZz48L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxwIGNsYXNzPSJ0aXRsZSBpcy02Ij48Y29kZT57eyB9fTwvY29kZT48L3A+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PHAgY2xhc3M9InRpdGxlIGlzLTYiPjxjb2RlPnt7ICB9fTwvY29kZT48L3A+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPgoKICAgICAgICAgICAgICAgICAgICA8cD48c3Ryb25nPm1ldGEtbW9kZWxzOiA8L3N0cm9uZz4gPGNvZGU+e3sgIH19PC9jb2RlPjwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPCEtLSA8ZGl2IGNsYXNzPSJ0aWxlIGlzLXBhcmVudCBpcy12ZXJ0aWNhbCBoYXMtdGV4dC1jZW50ZXJlZCBpcy00Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRpbGUgaXMtY2hpbGQgYm94Ij4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGl0bGUgaXMtMyBoYXMtdGV4dC1jZW50ZXJlZCI+QXBwbHkgTW9kZWwgdG8gRGF0YTwvcD4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBpcy1ncm91cGVkIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImNvbnRyb2wgaXMtZXhwYW5kZWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPSJpbnB1dCIgdHlwZT0idGV4dCIgcGxhY2Vob2xkZXI9IkZpbmQgYSByZXBvc2l0b3J5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iY29udHJvbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYnV0dG9uIGlzLWluZm8iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgUnVuIE1vZGVsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4gLS0+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250ZW50Ij4KICAgICAgICAgICAgICAgIDxoMT5EZXNjcmlwdGlvbjwvaDE+CiAgICAgICAgICAgICAgICA8cD5Mb3JlbSBpcHN1bTxzdXA+PGE+WzFdPC9hPjwvc3VwPiBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LiBOdWxsYSBhY2N1bXNhbiwgbWV0dXMgdWx0cmljZXMgZWxlaWZlbmQgZ3JhdmlkYSwgbnVsbGEgbnVuYyB2YXJpdXMgbGVjdHVzLCBuZWMgcnV0cnVtIGp1c3RvIG5pYmggZXUgbGVjdHVzLiBVdCB2dWxwdXRhdGUgc2VtcGVyIGR1aS4gRnVzY2UgZXJhdCBvZGlvLCBzb2xsaWNpdHVkaW4gdmVsIGVyYXQgdmVsLCBpbnRlcmR1bSBtYXR0aXMgbmVxdWUuIFN1YjxzdWI+c2NyaXB0PC9zdWI+IHdvcmtzIGFzIHdlbGwhPC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKCiAgICAgICAgPC9kaXY+CgogICAgICAgIDwhLS0gdGhpcyBpcyBmb3IgdGhlIGRhdGEgYXBwbGljYXRpb24gdGFiIC0tPgogICAgICAgIDxkaXYgdi1lbHNlPiAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1ucyBpcy1jZW50ZXJlZCI+IAogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIGlzLXR3by10aGlyZHMgaXMtY2VudGVyZWQiPiAKICAgICAgICAgICAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icGFuZWwgaXMtcHJpbWFyeSI+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InBhbmVsLWhlYWRpbmciPgogICAgICAgICAgICAgICAgICAgICAgICBBcHBseSBNb2RlbCB0byBEYXRhc2V0CiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYW5lbC1ibG9jayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlbGVjdCBpcy1mdWxsd2lkdGgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBpZD0ic2VsZWN0ZWRkYXRhc2V0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uPlNlbGVjdCBkYXRhc2V0PC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2LWZvcj0iaW5kZXggaW4gZWxhc3RpY2luZGljZXMiPiB7e2luZGV4fX08L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFuZWwtYmxvY2siPgogICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPSJhcHBsbW9kZWxidXR0b24iIGNsYXNzPSJidXR0b24gaXMtZnVsbHdpZHRoIiBAY2xpY2s9ImFwcGx5bW9kZWx0b2RhdGFzZXQoKSI+CiAgICAgICAgICAgICAgICAgICAgICAgIEFwcGx5IHt7IG1vZGVsbmFtZX19IHRvIGRhdGFzZXQKICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPSJtb2RlbHByb2Nlc3NpbmciIGNsYXNzPSJwYW5lbC1ibG9jayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cHJvZ3Jlc3MgY2xhc3M9InByb2dyZXNzIGlzLXNtYWxsIGlzLXByaW1hcnkiIG1heD0iMTAwIj4xNSU8L3Byb2dyZXNzPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0ibW9kZWxydW5jb21wbGV0ZWQiIGNsYXNzPSJub3RpZmljYXRpb24gaXMtc3VjY2VzcyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImRlbGV0ZSIgQGNsaWNrPSJoaWRlc3VjY2Vzc21lc3NnYWdlKCkiPjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgWW91ciBkYXRhc2V0IGhhcyBiZWVuIGFubm90YXRlZC4gVmlzaXQgeW91ciBkYXRhIDxhIEBjbGljaz0iZ290b2RhdGFzZXQoKSI+aGVyZTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo="},null]}