{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/PopulationView/PopulationView.vue?vue&type=style&index=0&id=27a18014&scoped=true&lang=css&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/PopulationView/PopulationView.vue","mtime":1635966233737},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAKZGl2LmNvbnRhaW5lciB7CiAgICAgIG1hcmdpbi10b3A6IDMwcHg7CiAgICB9CmRpdi5jYXJkIHsKICBtYXJnaW4tYm90dG9tOiAxNXB4Owp9CgpzcGFuLmNob3Nlbjpob3ZlciB7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGN1cnNvcjogcG9pbnRlcjsKfQo="},{"version":3,"sources":["PopulationView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkJA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"PopulationView.vue","sourceRoot":"src/pages/DataSearch/PopulationView","sourcesContent":["<template>\n<!-- eslint-disable  -->\n<div>\n\n    This is population view\n\n    <!-- this is for the patients documents -->\n    <div>\n        <DocumentView :searchresults=\"searchresults\" :meta_data=\"meta_data\" :documentlevelannotations=\"documentlevelannotations\" :tokens=\"tokens\" />  \n    </div>\n</div>\n\n   \n</template>\n\n<script>\n/*eslint-disable*/\nimport DocumentView from '../DocumentView.vue'\n\nexport default {\n  name: 'PopulationView',\n\n  components: {\n    DocumentView,\n  },\n\n  props: {\n      searchresults: [],\n      meta_data: [],\n      documentlevelannotations: [],\n      tokens: [],\n      test: String,\n      patient: String,\n      patientLevelAnnotations: {}\n  },\n\n  data() {\n\n    return {\n                columnsConcepts: [\n                    {\n                        field: 'nlp_concept_ids',\n                        label: 'concept_id',\n                        searchable: true,\n                    },\n                    {\n                        field: 'nlp_pretty_names',\n                        label: 'name',\n                        searchable: true,\n                    },\n                    {\n                        field: 'date',\n                        label: 'date',\n                        searchable: true,\n                        sortable: true,\n                    },\n                    {\n                        field: 'priority',\n                        label: 'priority',\n                        searchable: true,\n                        sortable: true,\n                    }\n                ],\n                columnsGroupedConcepts: [\n                    {\n                        field: 'nlp_concept_ids',\n                        label: 'concept_id',\n                        searchable: true,\n                    },\n                    {\n                        field: 'nlp_pretty_names',\n                        label: 'name',\n                        searchable: true,\n                    },\n                    {\n                        field: 'priority',\n                        label: 'priority',\n                        searchable: true,\n                        sortable: true,\n                    }\n                ],\n                columnsmetadata: [\n                    {\n                        field: 'document_idx',\n                        label: 'doc no',\n                        searchable: true,\n                    },                   \n                    {\n                        field: 'date',\n                        label: 'date',\n                        searchable: true,\n                        sortable: true,\n                    },\n                    {\n                        field: 'document_type',\n                        label: 'document_type',\n                        searchable: true,\n                    },\n                    {\n                        field: 'nlp_pretty_names',\n                        label: 'nlp_pretty_name',\n                        searchable: true,\n                    },\n                    {\n                        field: 'nlp_concept_ids',\n                        label: 'nlp_concept_id',\n                        searchable: true,\n                    },\n                ],\n                stickyHeaders: true,\n                selectMode: 'multi',\n                selected: [],\n                selectedMeta: [],\n                groupConcepts: false,\n                checkboxPosition: 'left',\n                checkedRows: [],\n\n    };\n  },\n\n  methods: {\n\n      displayEntity(token, index) {\n        document.getElementById('displayedprettyname_' + index).innerHTML = token['nlp_pretty_names'];\n        document.getElementById('displayedconceptid_' + index).innerHTML = token['nlp_concept_ids'];\n        document.getElementById('displayedmodelid_' + index).innerHTML = token['nlp_modelids'];\n        document.getElementById('notification_' + index).classList.remove(\"is-hidden\");\n      },\n\n      hideDisplayEntity(index) {\n        document.getElementById('notification_' + index).classList.add(\"is-hidden\");\n      },\n\n      onRowSelected(items) {\n        alert('hello')\n      },\n\n  },\n\n  created() {\n  },\n\n};\n</script>\n\n<style scoped > \ndiv.container {\n      margin-top: 30px;\n    }\ndiv.card {\n  margin-bottom: 15px;\n}\n\nspan.chosen:hover {\n  text-decoration: none;\n  cursor: pointer;\n}\n</style>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped > \n\n</style>\n\n"]}]}