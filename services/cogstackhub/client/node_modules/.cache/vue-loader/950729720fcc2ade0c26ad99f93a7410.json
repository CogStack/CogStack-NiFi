{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/index.vue","mtime":1624103351772},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qZXNsaW50LWRpc2FibGUqLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgSGVhZGVyIGZyb20gJ0AvY29tcG9uZW50cy9IZWFkZXIudnVlJzsKaW1wb3J0IERvY3VtZW50VmlldyBmcm9tICcuL0RvY3VtZW50Vmlldy52dWUnCmltcG9ydCBQYXRpZW50VmlldyBmcm9tICcuL1BhdGllbnRWaWV3L1BhdGllbnRWaWV3JwppbXBvcnQgJ2J1bG1hLWV4dGVuc2lvbnMvYnVsbWEtY2hlY2tyYWRpby9kaXN0L2Nzcy9idWxtYS1jaGVja3JhZGlvLm1pbi5jc3MnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0RhdGFTZWFyY2gnLAoKICBjb21wb25lbnRzOiB7CiAgICBIZWFkZXIsCiAgICBEb2N1bWVudFZpZXcsCiAgICBQYXRpZW50VmlldywKICB9LAoKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgICAgc2VhcmNodGV4dDogJycsCiAgICAgICAgaW5kZXg6ICcnLAogICAgICAgIHNlYXJjaHJlc3VsdHM6IFtdLAogICAgICAgIG1ldGFfZGF0YTogW10sCiAgICAgICAgdG9rZW5zOiBbXSwKICAgICAgICBkb2N1bWVudGxldmVsYW5ub3RhdGlvbnM6IFtdLAogICAgICAgIGhpdHM6IDAsCiAgICAgICAgZnJlZXRleHRtb2RlOiBmYWxzZSwKICAgICAgICBwYXRpZW50dmlld21vZGU6IGZhbHNlLAogICAgICAgIGZyZWV0ZXh0bWVzc2FnZTogJycsCiAgICAgICAgcGFnaW5hdGlvbjogewogICAgICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgICAgICB2aXNpYmxlUGFnZXM6IFtdLAogICAgICAgICAgbm9PZlBhZ2VzOiAxLAogICAgICAgICAgcmVzdWx0c3BlcnBhZ2U6IDEwLAogICAgICAgICAgbm9PZlZpc2libGVidXR0b25zOiAzLAogICAgICAgIH0sCiAgICAgICAgdGVzdDogJ2kgYW0gdGVzdCcsCiAgICAgICAgY3VycmVudFBhdGVudElkeDogMCwKICAgICAgICBwYXRpZW50TGV2ZWxBbm5vdGF0aW9uczoge30sCiAgICAgICAgcGF0aWVudDogU3RyaW5nLAogICAgICAgIHJvb3RfYXBpOiBwcm9jZXNzLmVudi5WVUVfQVBQX1VSTCwKICAgIH07CiAgfSwKCiAgbWV0aG9kczogewoKICAgICAgc2VhcmNoKCkgewogICAgICAgIGxldCBwYXRoID0gJ2h0dHA6Ly8nICsgdGhpcy5yb290X2FwaSArICc6NTAwMS9zZWFyY2hpbmRleCc7CgogICAgICAgIGlmICh0aGlzLnBhdGllbnR2aWV3bW9kZSl7CiAgICAgICAgICB0aGlzLnNlYXJjaHBhdGllbnRpbmRleCgpOwoKICAgICAgICB9IGVsc2V7CiAgICAgICAgICB0aGlzLnNlYXJjaGluZGV4KCk7CiAgICAgICAgfQogICAgICB9LAoKICAgICAgc2VhcmNocGF0aWVudGluZGV4KCl7CiAgICAgICAgbGV0IHBhdGggPSAnaHR0cDovLycgKyB0aGlzLnJvb3RfYXBpICsgJzo1MDAxL3NlYXJjaGluZGV4Zm9ycGF0aWVudHMnOwoKICAgICAgICBheGlvcy5wb3N0KHBhdGgsIHsnc2VhcmNoc3RyaW5nJzogdGhpcy5zZWFyY2h0ZXh0LCAnaW5kZXgnOiB0aGlzLmluZGV4LCAncGFnZU5vJzogdGhpcy5wYWdpbmF0aW9uLmN1cnJlbnRQYWdlLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAncmVzdWx0c3BlcnBhZ2UnOiB0aGlzLnBhZ2luYXRpb24ucmVzdWx0c3BlcnBhZ2UsICdwYXRpZW50X2lkeCc6IHRoaXMucGFnaW5hdGlvbi5jdXJyZW50UGFnZSAtIDF9LAogICAgICAgICAgICAgICAgICB7aGVhZGVyczogeydBdXRob3JpemF0aW9uJzogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2p3dCcpfX0pCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgICB0aGlzLnNlYXJjaHJlc3VsdHMgPSByZXMuZGF0YS5yZXN1bHRzWydoaXRzJ10KICAgICAgICAgICAgdGhpcy5oaXRzID0gcmVzLmRhdGEubm9fcGF0aWVudHMKICAgICAgICAgICAgdGhpcy5tZXRhX2RhdGEgPSByZXMuZGF0YS5tZXRhX2RhdGEKICAgICAgICAgICAgdGhpcy50b2tlbnMgPSByZXMuZGF0YS50b2tlbnMKICAgICAgICAgICAgdGhpcy5kb2N1bWVudGxldmVsYW5ub3RhdGlvbnMgPSByZXMuZGF0YS5kb2N1bWVudF9sZXZlbF9hbm5vdGF0aW9ucwogICAgICAgICAgICB0aGlzLmZyZWV0ZXh0bWVzc2FnZSA9IHJlcy5kYXRhLnJlc3VsdG1lc3NhZ2UKICAgICAgICAgICAgdGhpcy5ub19wYXRpZW50cyA9IHJlcy5kYXRhLm5vX3BhdGllbnRzCiAgICAgICAgICAgIHRoaXMucGF0aWVudCA9IHJlcy5kYXRhLnBhdGllbnQKICAgICAgICAgICAgdGhpcy5wYXRpZW50TGV2ZWxBbm5vdGF0aW9ucyA9IHJlcy5kYXRhLnBhdGllbnRMZXZlbEFubm90YXRpb25zCiAgICAgICAgICAgIC8vIHNldCBwYWdpbmF0aW9uIHZhcmlhYmxlcwogICAgICAgICAgICB0aGlzLmluaXRpYWxpc2VwYWdpbmF0aW9uKCkKICAgICAgICAgICAgCiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICAgIH0pOyAKCiAgICAgIH0sCgogICAgICBzZWFyY2hpbmRleCgpIHsKICAgICAgICBsZXQgcGF0aCA9ICdodHRwOi8vJyArIHRoaXMucm9vdF9hcGkgKyAnOjUwMDEvc2VhcmNoaW5kZXgnOwoKICAgICAgICBpZiAodGhpcy5mcmVldGV4dG1vZGUpewogICAgICAgICAgcGF0aCA9ICdodHRwOi8vJyArIHRoaXMucm9vdF9hcGkgKyAnOjUwMDEvc2VhcmNoaW5kZXhmcmVldGV4dCc7CgogICAgICAgIH0KCiAgICAgICAgYXhpb3MucG9zdChwYXRoLCB7J3NlYXJjaHN0cmluZyc6IHRoaXMuc2VhcmNodGV4dCwgJ2luZGV4JzogdGhpcy5pbmRleCwgJ3BhZ2VObyc6IHRoaXMucGFnaW5hdGlvbi5jdXJyZW50UGFnZSwgJ3Jlc3VsdHNwZXJwYWdlJzogdGhpcy5wYWdpbmF0aW9uLnJlc3VsdHNwZXJwYWdlfSwgCiAgICAgICAgICAgICAgICAgIHtoZWFkZXJzOiB7J0F1dGhvcml6YXRpb24nOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnand0Jyl9fSkKICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgIHRoaXMuc2VhcmNocmVzdWx0cyA9IHJlcy5kYXRhLnJlc3VsdHNbJ2hpdHMnXQogICAgICAgICAgICB0aGlzLmhpdHMgPSByZXMuZGF0YS5oaXRzCiAgICAgICAgICAgIHRoaXMubWV0YV9kYXRhID0gcmVzLmRhdGEubWV0YV9kYXRhCiAgICAgICAgICAgIHRoaXMudG9rZW5zID0gcmVzLmRhdGEudG9rZW5zCiAgICAgICAgICAgIHRoaXMuZG9jdW1lbnRsZXZlbGFubm90YXRpb25zID0gcmVzLmRhdGEuZG9jdW1lbnRfbGV2ZWxfYW5ub3RhdGlvbnMKICAgICAgICAgICAgdGhpcy5mcmVldGV4dG1lc3NhZ2UgPSByZXMuZGF0YS5yZXN1bHRtZXNzYWdlCiAgICAgICAgICAgIAogICAgICAgICAgICAvLyBzZXQgcGFnaW5hdGlvbiB2YXJpYWJsZXMKICAgICAgICAgICAgdGhpcy5pbml0aWFsaXNlcGFnaW5hdGlvbigpCiAgICAgICAgICAgIAogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgICB9KTsgICAgICAgCiAgICAgIH0sCgogICAgICBjaGFuZ2V0b3BhdGllbnR2aWV3KCkgewogICAgICAgIHRoaXMucGF0aWVudHZpZXdtb2RlID0gIXRoaXMucGF0aWVudHZpZXdtb2RlCiAgICAgICAgdGhpcy5zZWFyY2goKQogICAgICB9LAoKICAgICAgd2FybmJldGFtb2RlKCkgewogICAgICAgIHRoaXMuZnJlZXRleHRtb2RlID0gIXRoaXMuZnJlZXRleHRtb2RlCiAgICAgICAgYWxlcnQoJ2V4cGVyaW1lbnRhbCBmZWF0dXJlJykKICAgICAgfSwKCiAgICAgIGluaXRpYWxpc2VwYWdpbmF0aW9uKCkgewoKICAgICAgICAgICAgaWYgKHRoaXMucGF0aWVudHZpZXdtb2RlKXsKICAgICAgICAgICAgICB0aGlzLnBhZ2luYXRpb24ubm9PZlBhZ2VzID0gdGhpcy5oaXRzCiAgICAgICAgICAgIH0gZWxzZXsKICAgICAgICAgICAgICB0aGlzLnBhZ2luYXRpb24ubm9PZlBhZ2VzID0gTWF0aC5jZWlsKHRoaXMuaGl0cyAvIHRoaXMucGFnaW5hdGlvbi5yZXN1bHRzcGVycGFnZSkKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLnBhZ2luYXRpb24udmlzaWJsZVBhZ2VzID0gW10KCiAgICAgICAgICAgIGZvciAobGV0IGkgPSAtMSA7IGkgPCBNYXRoLm1pbih0aGlzLnBhZ2luYXRpb24ubm9PZlZpc2libGVidXR0b25zLCB0aGlzLnBhZ2luYXRpb24ubm9PZlBhZ2VzKSAtIDE7IGkrKyl7CiAgICAgICAgICAgICAgaWYgKHRoaXMucGFnaW5hdGlvbi5jdXJyZW50UGFnZSA9PT0gMSl7CiAgICAgICAgICAgICAgICBpZiAoaSA9PT0gLTEpewogICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZXsKICAgICAgICAgICAgICAgICAgdGhpcy5wYWdpbmF0aW9uLnZpc2libGVQYWdlcy5wdXNoKHRoaXMucGFnaW5hdGlvbi5jdXJyZW50UGFnZSArIGkpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0gCiAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5wYWdpbmF0aW9uLmN1cnJlbnRQYWdlID09PSB0aGlzLnBhZ2luYXRpb24ubm9PZlBhZ2VzKSB7CiAgICAgICAgICAgICAgICBpZiAoaSA9PT0gLTEpewogICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZXsKICAgICAgICAgICAgICAgICAgdGhpcy5wYWdpbmF0aW9uLnZpc2libGVQYWdlcy51bnNoaWZ0KHRoaXMucGFnaW5hdGlvbi5jdXJyZW50UGFnZSAtIGkpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMucGFnaW5hdGlvbi52aXNpYmxlUGFnZXMucHVzaCh0aGlzLnBhZ2luYXRpb24uY3VycmVudFBhZ2UgKyBpKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnBhZ2luYXRpb24udmlzaWJsZVBhZ2VzLCBpKQogICAgICAgICAgICB9CiAgICAgIH0sCgogICAgICBwYWdpbmF0ZShuZXdwYWdlTm8pIHsKICAgICAgICBpZiAobmV3cGFnZU5vIDwgMSB8fCBuZXdwYWdlTm8gPiB0aGlzLnBhZ2luYXRpb24ubm9PZlBhZ2VzKXsKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICB0aGlzLnBhZ2luYXRpb24uY3VycmVudFBhZ2UgPSBuZXdwYWdlTm8KICAgICAgICBpZiAodGhpcy5wYXRpZW50dmlld21vZGUpewogICAgICAgICAgdGhpcy5zZWFyY2hwYXRpZW50aW5kZXgoKTsKICAgICAgICB9IGVsc2V7CiAgICAgICAgICB0aGlzLnNlYXJjaGluZGV4KCk7CiAgICAgICAgfQogICAgICB9CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuaW5kZXggPSB0aGlzLiRyb3V0ZS5wYXJhbXMuaW5kZXg7CiAgICB0aGlzLnNlYXJjaGluZGV4KCk7CiAgfSwKCn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"index.vue","sourceRoot":"src/pages/DataSearch","sourcesContent":["<template>\n<!-- eslint-disable  -->\n  <div>\n    <Header/>\n\n    <div class=\"container\">\n      <div class=\"field has-addons\">\n        <div class=\"control is-expanded\">\n          <input class=\"input is-medium\" @keyup.enter=\"search()\" v-model.lazy=\"searchtext\" type=\"text\" placeholder=\"Type your query here\">\n        </div>\n        <div class=\"control\">\n        <span class=\"select is-medium\" @change=\"warnbetamode()\">\n          <select>\n            <option>kibana query language</option>\n            <option>free text search</option>\n          </select>\n        </span>\n        </div>\n      </div>\n\n      <div class=\"block\">\n            <div class=\"columns\">\n              <div class=\"column is-one-quarter\">\n              <div class=\"block\">\n                  <b-switch @input=\"changetopatientview()\">Patient View </b-switch>\n              </div>\n\n\n              <div class=\"box\">\n                    <div class=\"content has-text-left\">\n                      <h3><strong>Index Name: </strong>{{ index }}</h3>\n                      <h3>No of hits: {{ hits }}</h3>\n                    </div>\n              </div>\n              </div>\n              <div class=\"column\">\n                <div class=\"block\">\n                  <div class=\"card\" v-if=\"freetextmessage!= ''\">\n                    <div class=\"card-content\">\n                      <p class=\"title\" id='freetextmessage'>\n                        {{ freetextmessage }}\n                      </p>\n                    </div>\n                  </div>\n                  <div>\n                    <PatientView v-if=\"patientviewmode\"  :test=\"test\" :searchresults=\"searchresults\" :meta_data=\"meta_data\" :documentlevelannotations=\"documentlevelannotations\" :tokens=\"tokens\" :patientLevelAnnotations=\"patientLevelAnnotations\" :patient=\"patient\"/>  \n                    <DocumentView v-else :test=\"test\" :searchresults=\"searchresults\" :meta_data=\"meta_data\" :documentlevelannotations=\"documentlevelannotations\" :tokens=\"tokens\" />  \n                  </div>\n                </div>\n                \n                <div class=\"block\">\n                  <nav class=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\n                    <a class=\"pagination-previous\" @click=\"paginate(pagination.currentPage - 1)\">Previous</a>\n                    <a class=\"pagination-next\" @click=\"paginate(pagination.currentPage + 1)\">Next</a>\n                    <ul class=\"pagination-list\">\n                        <li><a class=\"pagination-link\" @click=\"paginate(1)\" :class = \"(pagination.currentPage === 1) ? 'is-current':'' \">1</a></li>\n                        <span v-if=\"!pagination.visiblePages.includes(1)\" class=\"pagination-ellipsis\">&hellip;</span>\n                        \n                        <li v-for=\"pageNo in pagination.visiblePages\">\n                          <a v-if=\"pageNo != 1 && pageNo != pagination.noOfPages\" class=\"pagination-link\" :class = \"(pageNo === pagination.currentPage) ? 'is-current':'' \" @click=\"paginate(pageNo)\" >{{pageNo}}</a>\n                        </li>\n\n                        <span v-if=\"!pagination.visiblePages.includes(pagination.noOfPages)\" class=\"pagination-ellipsis\">&hellip;</span>\n                        <li><a class=\"pagination-link\" @click=\"paginate(pagination.noOfPages)\" :class = \"(pagination.noOfPages === pagination.currentPage) ? 'is-current':'' \">{{ pagination.noOfPages }}</a></li>\n                      </li>\n                    </ul>\n                  </nav>\n                </div>\n              </div>\n            </div>\n      </div>\n\n\n    </div>\n \n  </div>\n</template>\n\n<script>\n/*eslint-disable*/\nimport axios from 'axios';\nimport Header from '@/components/Header.vue';\nimport DocumentView from './DocumentView.vue'\nimport PatientView from './PatientView/PatientView'\nimport 'bulma-extensions/bulma-checkradio/dist/css/bulma-checkradio.min.css'\n\nexport default {\n  name: 'DataSearch',\n\n  components: {\n    Header,\n    DocumentView,\n    PatientView,\n  },\n\n\n  data() {\n    return {\n        searchtext: '',\n        index: '',\n        searchresults: [],\n        meta_data: [],\n        tokens: [],\n        documentlevelannotations: [],\n        hits: 0,\n        freetextmode: false,\n        patientviewmode: false,\n        freetextmessage: '',\n        pagination: {\n          currentPage: 1,\n          visiblePages: [],\n          noOfPages: 1,\n          resultsperpage: 10,\n          noOfVisiblebuttons: 3,\n        },\n        test: 'i am test',\n        currentPatentIdx: 0,\n        patientLevelAnnotations: {},\n        patient: String,\n        root_api: process.env.VUE_APP_URL,\n    };\n  },\n\n  methods: {\n\n      search() {\n        let path = 'http://' + this.root_api + ':5001/searchindex';\n\n        if (this.patientviewmode){\n          this.searchpatientindex();\n\n        } else{\n          this.searchindex();\n        }\n      },\n\n      searchpatientindex(){\n        let path = 'http://' + this.root_api + ':5001/searchindexforpatients';\n\n        axios.post(path, {'searchstring': this.searchtext, 'index': this.index, 'pageNo': this.pagination.currentPage, \n                          'resultsperpage': this.pagination.resultsperpage, 'patient_idx': this.pagination.currentPage - 1},\n                  {headers: {'Authorization': localStorage.getItem('jwt')}})\n        .then((res) => {\n            this.searchresults = res.data.results['hits']\n            this.hits = res.data.no_patients\n            this.meta_data = res.data.meta_data\n            this.tokens = res.data.tokens\n            this.documentlevelannotations = res.data.document_level_annotations\n            this.freetextmessage = res.data.resultmessage\n            this.no_patients = res.data.no_patients\n            this.patient = res.data.patient\n            this.patientLevelAnnotations = res.data.patientLevelAnnotations\n            // set pagination variables\n            this.initialisepagination()\n            \n        })\n        .catch((error) => {\n            console.error(error);\n        }); \n\n      },\n\n      searchindex() {\n        let path = 'http://' + this.root_api + ':5001/searchindex';\n\n        if (this.freetextmode){\n          path = 'http://' + this.root_api + ':5001/searchindexfreetext';\n\n        }\n\n        axios.post(path, {'searchstring': this.searchtext, 'index': this.index, 'pageNo': this.pagination.currentPage, 'resultsperpage': this.pagination.resultsperpage}, \n                  {headers: {'Authorization': localStorage.getItem('jwt')}})\n        .then((res) => {\n            this.searchresults = res.data.results['hits']\n            this.hits = res.data.hits\n            this.meta_data = res.data.meta_data\n            this.tokens = res.data.tokens\n            this.documentlevelannotations = res.data.document_level_annotations\n            this.freetextmessage = res.data.resultmessage\n            \n            // set pagination variables\n            this.initialisepagination()\n            \n        })\n        .catch((error) => {\n            console.error(error);\n        });       \n      },\n\n      changetopatientview() {\n        this.patientviewmode = !this.patientviewmode\n        this.search()\n      },\n\n      warnbetamode() {\n        this.freetextmode = !this.freetextmode\n        alert('experimental feature')\n      },\n\n      initialisepagination() {\n\n            if (this.patientviewmode){\n              this.pagination.noOfPages = this.hits\n            } else{\n              this.pagination.noOfPages = Math.ceil(this.hits / this.pagination.resultsperpage)\n            }\n            this.pagination.visiblePages = []\n\n            for (let i = -1 ; i < Math.min(this.pagination.noOfVisiblebuttons, this.pagination.noOfPages) - 1; i++){\n              if (this.pagination.currentPage === 1){\n                if (i === -1){\n                  continue\n                }\n                else{\n                  this.pagination.visiblePages.push(this.pagination.currentPage + i);\n                }\n              } \n              else if (this.pagination.currentPage === this.pagination.noOfPages) {\n                if (i === -1){\n                  continue\n                }\n                else{\n                  this.pagination.visiblePages.unshift(this.pagination.currentPage - i);\n                }\n              }\n              else {\n                this.pagination.visiblePages.push(this.pagination.currentPage + i)\n              }\n              console.log(this.pagination.visiblePages, i)\n            }\n      },\n\n      paginate(newpageNo) {\n        if (newpageNo < 1 || newpageNo > this.pagination.noOfPages){\n          return\n        }\n        this.pagination.currentPage = newpageNo\n        if (this.patientviewmode){\n          this.searchpatientindex();\n        } else{\n          this.searchindex();\n        }\n      }\n  },\n\n  created() {\n    this.index = this.$route.params.index;\n    this.searchindex();\n  },\n\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped > \ndiv.container {\n      margin-top: 30px;\n    }\ndiv.card {\n  margin-bottom: 15px;\n}\n\nspan.chosen:hover {\n  text-decoration: none;\n  cursor: pointer;\n}\n\nlabel.unselectable {\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n</style>\n\n<style lang=\"sass\" scoped>\n\n</style>\n"]}]}