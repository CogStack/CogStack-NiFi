{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/index.vue","mtime":1623158941886},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qZXNsaW50LWRpc2FibGUqLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgSGVhZGVyIGZyb20gJ0AvY29tcG9uZW50cy9IZWFkZXIudnVlJzsKLy8gaW1wb3J0IGJ1bG1hIGZyb20gJ2J1bG1hJzsKaW1wb3J0IERvY3VtZW50VmlldyBmcm9tICcuL0RvY3VtZW50Vmlldy52dWUnCmltcG9ydCBQYXRpZW50VmlldyBmcm9tICcuL1BhdGllbnRWaWV3JwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEYXRhU2VhcmNoJywKCiAgY29tcG9uZW50czogewogICAgSGVhZGVyLAogICAgRG9jdW1lbnRWaWV3LAogICAgUGF0aWVudFZpZXcsCiAgfSwKCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAgIHNlYXJjaHRleHQ6ICcnLAogICAgICAgIGluZGV4OiAnJywKICAgICAgICBzZWFyY2hyZXN1bHRzOiBbXSwKICAgICAgICBtZXRhX2RhdGE6IFtdLAogICAgICAgIHRva2VuczogW10sCiAgICAgICAgZG9jdW1lbnRsZXZlbGFubm90YXRpb25zOiBbXSwKICAgICAgICBoaXRzOiAwLAogICAgICAgIGZyZWV0ZXh0bW9kZTogZmFsc2UsCiAgICAgICAgcGF0aWVudHZpZXdtb2RlOiBmYWxzZSwKICAgICAgICBmcmVldGV4dG1lc3NhZ2U6ICcnLAogICAgICAgIHBhZ2luYXRpb246IHsKICAgICAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICAgICAgdmlzaWJsZVBhZ2VzOiBbXSwKICAgICAgICAgIG5vT2ZQYWdlczogMSwKICAgICAgICAgIHJlc3VsdHNwZXJwYWdlOiAxMCwKICAgICAgICAgIG5vT2ZWaXNpYmxlYnV0dG9uczogMywKICAgICAgICB9LAogICAgfTsKICB9LAoKICBtZXRob2RzOiB7CgogICAgICBzZWFyY2hpbmRleCgpIHsKICAgICAgICBsZXQgcGF0aCA9ICdodHRwOi8vMTI3LjAuMC4xJyArICc6NTAwMS9zZWFyY2hpbmRleCc7CgogICAgICAgIGlmICh0aGlzLmZyZWV0ZXh0bW9kZSl7CiAgICAgICAgICBwYXRoID0gJ2h0dHA6Ly8xMjcuMC4wLjEnICsgJzo1MDAxL3NlYXJjaGluZGV4ZnJlZXRleHQnOwoKICAgICAgICB9CgogICAgICAgIGF4aW9zLnBvc3QocGF0aCwgeydzZWFyY2hzdHJpbmcnOiB0aGlzLnNlYXJjaHRleHQsICdpbmRleCc6IHRoaXMuaW5kZXgsICdwYWdlTm8nOiB0aGlzLnBhZ2luYXRpb24uY3VycmVudFBhZ2UsICdyZXN1bHRzcGVycGFnZSc6IHRoaXMucGFnaW5hdGlvbi5yZXN1bHRzcGVycGFnZX0sIAogICAgICAgICAgICAgICAgICB7aGVhZGVyczogeydBdXRob3JpemF0aW9uJzogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2p3dCcpfX0pCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgICB0aGlzLnNlYXJjaHJlc3VsdHMgPSByZXMuZGF0YS5yZXN1bHRzWydoaXRzJ10KICAgICAgICAgICAgdGhpcy5oaXRzID0gcmVzLmRhdGEuaGl0cwogICAgICAgICAgICB0aGlzLm1ldGFfZGF0YSA9IHJlcy5kYXRhLm1ldGFfZGF0YQogICAgICAgICAgICB0aGlzLnRva2VucyA9IHJlcy5kYXRhLnRva2VucwogICAgICAgICAgICB0aGlzLmRvY3VtZW50bGV2ZWxhbm5vdGF0aW9ucyA9IHJlcy5kYXRhLmRvY3VtZW50X2xldmVsX2Fubm90YXRpb25zCiAgICAgICAgICAgIHRoaXMuZnJlZXRleHRtZXNzYWdlID0gcmVzLmRhdGEucmVzdWx0bWVzc2FnZQogICAgICAgICAgICAKICAgICAgICAgICAgLy8gc2V0IHBhZ2luYXRpb24gdmFyaWFibGVzCiAgICAgICAgICAgIHRoaXMuaW5pdGlhbGlzZXBhZ2luYXRpb24oKQogICAgICAgICAgICAKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0sCgogICAgICBjaGFuZ2V0b3BhdGllbnR2aWV3KCkgewogICAgICAgIHRoaXMucGF0aWVudHZpZXdtb2RlID0gIXRoaXMucGF0aWVudHZpZXdtb2RlCiAgICAgIH0sCgogICAgICB3YXJuYmV0YW1vZGUoKSB7CiAgICAgICAgdGhpcy5mcmVldGV4dG1vZGUgPSAhdGhpcy5mcmVldGV4dG1vZGUKICAgICAgICBhbGVydCgnZXhwZXJpbWVudGFsIGZlYXR1cmUnKQogICAgICB9LAoKICAgICAgaW5pdGlhbGlzZXBhZ2luYXRpb24oKSB7CgogICAgICAgICAgICB0aGlzLnBhZ2luYXRpb24ubm9PZlBhZ2VzID0gTWF0aC5mbG9vcih0aGlzLmhpdHMgLyB0aGlzLnBhZ2luYXRpb24ucmVzdWx0c3BlcnBhZ2UpCiAgICAgICAgICAgIHRoaXMucGFnaW5hdGlvbi52aXNpYmxlUGFnZXMgPSBbXQoKICAgICAgICAgICAgZm9yIChsZXQgaSA9IC0xIDsgaSA8IE1hdGgubWluKHRoaXMucGFnaW5hdGlvbi5ub09mVmlzaWJsZWJ1dHRvbnMsIHRoaXMucGFnaW5hdGlvbi5ub09mUGFnZXMpIC0gMTsgaSsrKXsKICAgICAgICAgICAgICBpZiAodGhpcy5wYWdpbmF0aW9uLmN1cnJlbnRQYWdlID09PSAxKXsKICAgICAgICAgICAgICAgIGlmIChpID09PSAtMSl7CiAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlewogICAgICAgICAgICAgICAgICB0aGlzLnBhZ2luYXRpb24udmlzaWJsZVBhZ2VzLnB1c2godGhpcy5wYWdpbmF0aW9uLmN1cnJlbnRQYWdlICsgaSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSAKICAgICAgICAgICAgICBlbHNlIGlmICh0aGlzLnBhZ2luYXRpb24uY3VycmVudFBhZ2UgPT09IHRoaXMucGFnaW5hdGlvbi5ub09mUGFnZXMpIHsKICAgICAgICAgICAgICAgIGlmIChpID09PSAtMSl7CiAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlewogICAgICAgICAgICAgICAgICB0aGlzLnBhZ2luYXRpb24udmlzaWJsZVBhZ2VzLnVuc2hpZnQodGhpcy5wYWdpbmF0aW9uLmN1cnJlbnRQYWdlIC0gaSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5wYWdpbmF0aW9uLnZpc2libGVQYWdlcy5wdXNoKHRoaXMucGFnaW5hdGlvbi5jdXJyZW50UGFnZSArIGkpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMucGFnaW5hdGlvbi52aXNpYmxlUGFnZXMsIGkpCiAgICAgICAgICAgIH0KICAgICAgfSwKCiAgICAgIHBhZ2luYXRlKG5ld3BhZ2VObykgewogICAgICAgIGlmIChuZXdwYWdlTm8gPCAxIHx8IG5ld3BhZ2VObyA+IHRoaXMucGFnaW5hdGlvbi5ub09mUGFnZXMpewogICAgICAgICAgcmV0dXJuCiAgICAgICAgfQogICAgICAgIHRoaXMucGFnaW5hdGlvbi5jdXJyZW50UGFnZSA9IG5ld3BhZ2VObwogICAgICAgIHRoaXMuc2VhcmNoaW5kZXgoKQogICAgICB9CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuaW5kZXggPSB0aGlzLiRyb3V0ZS5wYXJhbXMuaW5kZXg7CiAgICB0aGlzLnNlYXJjaGluZGV4KCk7CiAgfSwKCn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"index.vue","sourceRoot":"src/pages/DataSearch","sourcesContent":["<template>\n<!-- eslint-disable  -->\n  <div>\n    <Header/>\n\n    <div class=\"container\">\n      <div class=\"field has-addons\">\n        <div class=\"control is-expanded\">\n          <input class=\"input is-medium\" @keyup.enter=\"searchindex()\" v-model.lazy=\"searchtext\" type=\"text\" placeholder=\"Type your query here\">\n        </div>\n        <div class=\"control\">\n        <span class=\"select is-medium\" @change=\"warnbetamode()\">\n          <select>\n            <option>kibana query language</option>\n            <option>free text search</option>\n          </select>\n        </span>\n        </div>\n      </div>\n\n      <div class=\"block\">\n            <div class=\"columns\">\n              <div class=\"column is-one-quarter\">\n                <label class=\"checkbox\">\n                  <input type=\"checkbox\" @click=\"changetopatientview()\">PatientView\n                </label>\n\n                <div class=\"box\">\n                      <div class=\"content has-text-left\">\n                        <h3><strong>Index Name: </strong>{{ index }}</h3>\n                        <h3>No of hits: {{ hits }}</h3>\n                      </div>\n                </div>\n                <form class=\"box has-text-left\">\n\n                </form>\n              </div>\n              <div class=\"column\">\n                <div class=\"block\">\n                  <div class=\"card\" v-if=\"freetextmessage!= ''\">\n                    <div class=\"card-content\">\n                      <p class=\"title\" id='freetextmessage'>\n                        {{ freetextmessage }}\n                      </p>\n                    </div>\n                  </div>\n                  <div>\n                    <PatientView v-if=\"patientviewmode\" />  \n                    <DocumentView v-else :test=\"hits\" :searchresults=\"searchresults\" :meta_data=\"meta_data\" :documentlevelannotations=\"documentlevelannotations\" :tokens=\"tokens\" />  \n                  </div>\n                </div>\n                \n                <div class=\"block\">\n                  <nav class=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\n                    <a class=\"pagination-previous\" @click=\"paginate(pagination.currentPage - 1)\">Previous</a>\n                    <a class=\"pagination-next\" @click=\"paginate(pagination.currentPage + 1)\">Next page</a>\n                    <ul class=\"pagination-list\">\n                        <li><a class=\"pagination-link\" @click=\"paginate(1)\" :class = \"(pagination.currentPage === 1) ? 'is-current':'' \">1</a></li>\n                        <span v-if=\"!pagination.visiblePages.includes(1)\" class=\"pagination-ellipsis\">&hellip;</span>\n                        \n                        <li v-for=\"pageNo in pagination.visiblePages\">\n                          <a v-if=\"pageNo != 1 && pageNo != pagination.noOfPages\" class=\"pagination-link\" :class = \"(pageNo === pagination.currentPage) ? 'is-current':'' \" @click=\"paginate(pageNo)\" >{{pageNo}}</a>\n                        </li>\n\n                        <span v-if=\"!pagination.visiblePages.includes(pagination.noOfPages)\" class=\"pagination-ellipsis\">&hellip;</span>\n                        <li><a class=\"pagination-link\" @click=\"paginate(pagination.noOfPages)\" :class = \"(pagination.noOfPages === pagination.currentPage) ? 'is-current':'' \">{{ pagination.noOfPages }}</a></li>\n                      </li>\n                    </ul>\n                  </nav>\n                </div>\n              </div>\n            </div>\n      </div>\n\n\n    </div>\n \n  </div>\n</template>\n\n<script>\n/*eslint-disable*/\nimport axios from 'axios';\nimport Header from '@/components/Header.vue';\n// import bulma from 'bulma';\nimport DocumentView from './DocumentView.vue'\nimport PatientView from './PatientView'\n\nexport default {\n  name: 'DataSearch',\n\n  components: {\n    Header,\n    DocumentView,\n    PatientView,\n  },\n\n\n  data() {\n    return {\n        searchtext: '',\n        index: '',\n        searchresults: [],\n        meta_data: [],\n        tokens: [],\n        documentlevelannotations: [],\n        hits: 0,\n        freetextmode: false,\n        patientviewmode: false,\n        freetextmessage: '',\n        pagination: {\n          currentPage: 1,\n          visiblePages: [],\n          noOfPages: 1,\n          resultsperpage: 10,\n          noOfVisiblebuttons: 3,\n        },\n    };\n  },\n\n  methods: {\n\n      searchindex() {\n        let path = 'http://127.0.0.1' + ':5001/searchindex';\n\n        if (this.freetextmode){\n          path = 'http://127.0.0.1' + ':5001/searchindexfreetext';\n\n        }\n\n        axios.post(path, {'searchstring': this.searchtext, 'index': this.index, 'pageNo': this.pagination.currentPage, 'resultsperpage': this.pagination.resultsperpage}, \n                  {headers: {'Authorization': localStorage.getItem('jwt')}})\n        .then((res) => {\n            this.searchresults = res.data.results['hits']\n            this.hits = res.data.hits\n            this.meta_data = res.data.meta_data\n            this.tokens = res.data.tokens\n            this.documentlevelannotations = res.data.document_level_annotations\n            this.freetextmessage = res.data.resultmessage\n            \n            // set pagination variables\n            this.initialisepagination()\n            \n        })\n        .catch((error) => {\n            console.error(error);\n        });\n      },\n\n      changetopatientview() {\n        this.patientviewmode = !this.patientviewmode\n      },\n\n      warnbetamode() {\n        this.freetextmode = !this.freetextmode\n        alert('experimental feature')\n      },\n\n      initialisepagination() {\n\n            this.pagination.noOfPages = Math.floor(this.hits / this.pagination.resultsperpage)\n            this.pagination.visiblePages = []\n\n            for (let i = -1 ; i < Math.min(this.pagination.noOfVisiblebuttons, this.pagination.noOfPages) - 1; i++){\n              if (this.pagination.currentPage === 1){\n                if (i === -1){\n                  continue\n                }\n                else{\n                  this.pagination.visiblePages.push(this.pagination.currentPage + i);\n                }\n              } \n              else if (this.pagination.currentPage === this.pagination.noOfPages) {\n                if (i === -1){\n                  continue\n                }\n                else{\n                  this.pagination.visiblePages.unshift(this.pagination.currentPage - i);\n                }\n              }\n              else {\n                this.pagination.visiblePages.push(this.pagination.currentPage + i)\n              }\n              console.log(this.pagination.visiblePages, i)\n            }\n      },\n\n      paginate(newpageNo) {\n        if (newpageNo < 1 || newpageNo > this.pagination.noOfPages){\n          return\n        }\n        this.pagination.currentPage = newpageNo\n        this.searchindex()\n      }\n  },\n\n  created() {\n    this.index = this.$route.params.index;\n    this.searchindex();\n  },\n\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped > \ndiv.container {\n      margin-top: 30px;\n    }\ndiv.card {\n  margin-bottom: 15px;\n}\n\nspan.chosen:hover {\n  text-decoration: none;\n  cursor: pointer;\n}\n</style>\n\n<style lang=\"sass\" scoped>\n\n</style>\n"]}]}