{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/PatientView/PatientView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/PatientView/PatientView.vue","mtime":1637018815604},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qZXNsaW50LWRpc2FibGUqLwppbXBvcnQgRG9jdW1lbnRzVmlldyBmcm9tICdAL2NvbXBvbmVudHMvRG9jdW1lbnRzVmlldy9Eb2N1bWVudHNWaWV3LnZ1ZScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUGF0aWVudFZpZXcnLAoKICBjb21wb25lbnRzOiB7CiAgICBEb2N1bWVudHNWaWV3LAogIH0sCgogIHByb3BzOiB7CiAgICAgIHBhdGllbnQ6IFN0cmluZywKICAgICAgc2VhcmNocmVzdWx0czogW10sCiAgfSwKCiAgZGF0YSgpIHsKCiAgICByZXR1cm4gewogICAgICAgICAgICAgICAgY29sdW1uc0NvbmNlcHRzOiBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBmaWVsZDogJ25scF9jb25jZXB0X2lkcycsCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnY29uY2VwdF9pZCcsCiAgICAgICAgICAgICAgICAgICAgICAgIHNlYXJjaGFibGU6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkOiAnbmxwX3ByZXR0eV9uYW1lcycsCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnbmFtZScsCiAgICAgICAgICAgICAgICAgICAgICAgIHNlYXJjaGFibGU6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkOiAnZGF0ZScsCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnZGF0ZScsCiAgICAgICAgICAgICAgICAgICAgICAgIHNlYXJjaGFibGU6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgIHNvcnRhYmxlOiB0cnVlLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBmaWVsZDogJ3ByaW9yaXR5JywKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICdwcmlvcml0eScsCiAgICAgICAgICAgICAgICAgICAgICAgIHNlYXJjaGFibGU6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgIHNvcnRhYmxlOiB0cnVlLAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBjb2x1bW5zR3JvdXBlZENvbmNlcHRzOiBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBmaWVsZDogJ25scF9jb25jZXB0X2lkcycsCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnY29uY2VwdF9pZCcsCiAgICAgICAgICAgICAgICAgICAgICAgIHNlYXJjaGFibGU6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkOiAnbmxwX3ByZXR0eV9uYW1lcycsCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnbmFtZScsCiAgICAgICAgICAgICAgICAgICAgICAgIHNlYXJjaGFibGU6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkOiAncHJpb3JpdHknLAogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ3ByaW9yaXR5JywKICAgICAgICAgICAgICAgICAgICAgICAgc2VhcmNoYWJsZTogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIGNvbHVtbnNtZXRhZGF0YTogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQ6ICdkb2N1bWVudF9pZHgnLAogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ2RvYyBubycsCiAgICAgICAgICAgICAgICAgICAgICAgIHNlYXJjaGFibGU6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgfSwgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBmaWVsZDogJ2RhdGUnLAogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ2RhdGUnLAogICAgICAgICAgICAgICAgICAgICAgICBzZWFyY2hhYmxlOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICBzb3J0YWJsZTogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQ6ICdkb2N1bWVudF90eXBlJywKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICdkb2N1bWVudF90eXBlJywKICAgICAgICAgICAgICAgICAgICAgICAgc2VhcmNoYWJsZTogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQ6ICdubHBfcHJldHR5X25hbWVzJywKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICdubHBfcHJldHR5X25hbWUnLAogICAgICAgICAgICAgICAgICAgICAgICBzZWFyY2hhYmxlOiB0cnVlLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBmaWVsZDogJ25scF9jb25jZXB0X2lkcycsCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnbmxwX2NvbmNlcHRfaWQnLAogICAgICAgICAgICAgICAgICAgICAgICBzZWFyY2hhYmxlOiB0cnVlLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgc3RpY2t5SGVhZGVyczogdHJ1ZSwKICAgICAgICAgICAgICAgIHNlbGVjdE1vZGU6ICdtdWx0aScsCiAgICAgICAgICAgICAgICBzZWxlY3RlZDogW10sCiAgICAgICAgICAgICAgICBzZWxlY3RlZE1ldGE6IFtdLAogICAgICAgICAgICAgICAgZ3JvdXBDb25jZXB0czogZmFsc2UsCiAgICB9OwogIH0sCgogIG1ldGhvZHM6IHsKCiAgICAgIGRpc3BsYXlFbnRpdHkodG9rZW4sIGluZGV4KSB7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rpc3BsYXllZHByZXR0eW5hbWVfJyArIGluZGV4KS5pbm5lckhUTUwgPSB0b2tlblsnbmxwX3ByZXR0eV9uYW1lcyddOwogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXNwbGF5ZWRjb25jZXB0aWRfJyArIGluZGV4KS5pbm5lckhUTUwgPSB0b2tlblsnbmxwX2NvbmNlcHRfaWRzJ107CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rpc3BsYXllZG1vZGVsaWRfJyArIGluZGV4KS5pbm5lckhUTUwgPSB0b2tlblsnbmxwX21vZGVsaWRzJ107CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25vdGlmaWNhdGlvbl8nICsgaW5kZXgpLmNsYXNzTGlzdC5yZW1vdmUoImlzLWhpZGRlbiIpOwogICAgICB9LAoKICAgICAgaGlkZURpc3BsYXlFbnRpdHkoaW5kZXgpIHsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbm90aWZpY2F0aW9uXycgKyBpbmRleCkuY2xhc3NMaXN0LmFkZCgiaXMtaGlkZGVuIik7CiAgICAgIH0sCgogICAgICBvblJvd1NlbGVjdGVkKGl0ZW1zKSB7CiAgICAgICAgYWxlcnQoJ2hlbGxvJykKICAgICAgfSwKCiAgfSwKCiAgY3JlYXRlZCgpIHsKICB9LAoKfTsK"},{"version":3,"sources":["PatientView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"PatientView.vue","sourceRoot":"src/pages/DataSearch/PatientView","sourcesContent":["<template>\n<!-- eslint-disable  -->\n<div>\n    <!-- this is for a view of all of the patients labels (set) -->\n    <div class=\"card\" id=\"patient-summary\">\n        <header class=\"card-header\">\n            <p class=\"card-header-title\">\n            Patient Summary \n            </p>\n        </header> \n        <div class=\"card-content\" >\n            <div class=\"columns\">\n                <div class=\"column is-one-quarter\">\n                    <div class=\"has-text-left\"><strong>primarypatientmrn</strong></div>\n                </div>\n                <div class=\"column has-text-left\"> {{ patient }}</div>\n            </div>\n            <!-- <div class=\"columns\">\n                <div class=\"column is-one-quarter\">\n                    <div class=\"has-text-left\"><strong>nlp labels</strong></div>\n                </div>\n                <div class=\"column has-text-left\">\n\n                    <b-field grouped group-multiline>\n                        <div class=\"control\">\n                            <b-switch v-model=\"groupConcepts\">Show unique concepts</b-switch>\n                        </div>\n                    </b-field>\n\n                    <b-tabs>\n                        <b-tab-item v-if=\"!groupConcepts\" label=\"All Concepts\">\n                                        <b-table\n                                            :data=\"patientLevelAnnotations.span_annotations\"\n                                            :columns=\"columnsConcepts\"\n                                            :sticky-header=\"stickyHeaders\"\n                                            :selected.sync=\"selectedMeta\"\n                                            focusable>\n                                        </b-table>\n                        </b-tab-item>\n                        <b-tab-item v-if=\"groupConcepts\" label=\"Grouped Concepts\">\n                                        <b-table\n                                            :data=\"patientLevelAnnotations.grouped_span_annotations\"\n                                            :columns=\"columnsGroupedConcepts\"\n                                            :sticky-header=\"stickyHeaders\"\n                                            :selected.sync=\"selected\"\n                                            focusable>\n                                        </b-table>\n                        </b-tab-item>\n                        <b-tab-item v-if=\"selected.length != 0 && groupConcepts\" label=\"Selected\">\n                                        <b-table\n                                            :data=\"selected.meta_data\"\n                                            :columns=\"columnsmetadata\"\n                                            :sticky-header=\"stickyHeaders\"\n                                            :selected.sync=\"selectedMeta\"\n                                            focusable>\n                                        </b-table>\n                        </b-tab-item>\n                        <b-tab-item v-if=\"selectedMeta.length != 0\"  label=\"Document\">\n                            <div class=\"card-content\">\n                            <div class=\"content\">\n                                <span v-for=\"(token,token_idx) in tokens[selectedMeta.document_idx] \">\n                                    <span v-html=\"searchresults[selectedMeta.document_idx]._source['note'].slice(token['start'],token['end'])\" v-if=\"selectedMeta.start == token['start'] && selectedMeta.end == token['end']\"  class=\"tag is-warning chosen is-medium\" />\n                                    <span v-html=\"searchresults[selectedMeta.document_idx]._source['note'].slice(token['start'],token['end'])\" v-else />{{ ' ' }}\n                                </span>\n                            </div>\n                            </div>\n                        </b-tab-item>\n                    </b-tabs>\n                </div>\n            </div> -->\n        </div>\n    </div>\n\n</div>\n\n   \n\n</template>\n\n<script>\n/*eslint-disable*/\nimport DocumentsView from '@/components/DocumentsView/DocumentsView.vue'\n\nexport default {\n  name: 'PatientView',\n\n  components: {\n    DocumentsView,\n  },\n\n  props: {\n      patient: String,\n      searchresults: [],\n  },\n\n  data() {\n\n    return {\n                columnsConcepts: [\n                    {\n                        field: 'nlp_concept_ids',\n                        label: 'concept_id',\n                        searchable: true,\n                    },\n                    {\n                        field: 'nlp_pretty_names',\n                        label: 'name',\n                        searchable: true,\n                    },\n                    {\n                        field: 'date',\n                        label: 'date',\n                        searchable: true,\n                        sortable: true,\n                    },\n                    {\n                        field: 'priority',\n                        label: 'priority',\n                        searchable: true,\n                        sortable: true,\n                    }\n                ],\n                columnsGroupedConcepts: [\n                    {\n                        field: 'nlp_concept_ids',\n                        label: 'concept_id',\n                        searchable: true,\n                    },\n                    {\n                        field: 'nlp_pretty_names',\n                        label: 'name',\n                        searchable: true,\n                    },\n                    {\n                        field: 'priority',\n                        label: 'priority',\n                        searchable: true,\n                        sortable: true,\n                    }\n                ],\n                columnsmetadata: [\n                    {\n                        field: 'document_idx',\n                        label: 'doc no',\n                        searchable: true,\n                    },                   \n                    {\n                        field: 'date',\n                        label: 'date',\n                        searchable: true,\n                        sortable: true,\n                    },\n                    {\n                        field: 'document_type',\n                        label: 'document_type',\n                        searchable: true,\n                    },\n                    {\n                        field: 'nlp_pretty_names',\n                        label: 'nlp_pretty_name',\n                        searchable: true,\n                    },\n                    {\n                        field: 'nlp_concept_ids',\n                        label: 'nlp_concept_id',\n                        searchable: true,\n                    },\n                ],\n                stickyHeaders: true,\n                selectMode: 'multi',\n                selected: [],\n                selectedMeta: [],\n                groupConcepts: false,\n    };\n  },\n\n  methods: {\n\n      displayEntity(token, index) {\n        document.getElementById('displayedprettyname_' + index).innerHTML = token['nlp_pretty_names'];\n        document.getElementById('displayedconceptid_' + index).innerHTML = token['nlp_concept_ids'];\n        document.getElementById('displayedmodelid_' + index).innerHTML = token['nlp_modelids'];\n        document.getElementById('notification_' + index).classList.remove(\"is-hidden\");\n      },\n\n      hideDisplayEntity(index) {\n        document.getElementById('notification_' + index).classList.add(\"is-hidden\");\n      },\n\n      onRowSelected(items) {\n        alert('hello')\n      },\n\n  },\n\n  created() {\n  },\n\n};\n</script>\n\n<style scoped > \ndiv.container {\n      margin-top: 30px;\n    }\ndiv.card {\n  margin-bottom: 15px;\n}\n\nspan.chosen:hover {\n  text-decoration: none;\n  cursor: pointer;\n}\n</style>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped > \n\n</style>\n\n"]}]}