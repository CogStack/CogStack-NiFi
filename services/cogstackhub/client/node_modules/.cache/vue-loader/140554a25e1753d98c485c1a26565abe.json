{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/src/pages/DataSearch/index.vue","mtime":1635966419000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/cogstackhub/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"index.vue","sourceRoot":"src/pages/DataSearch","sourcesContent":["<template>\n<!-- eslint-disable  -->\n  <div>\n    <Header/>\n\n    <div class=\"container\">\n      <div class=\"field has-addons\">\n        <div class=\"control is-expanded\">\n          <input class=\"input is-medium\" @keyup.enter=\"search()\" v-model.lazy=\"searchtext\" type=\"text\" placeholder=\"Type your query here\">\n        </div>\n        <div class=\"control\">\n        <span class=\"select is-medium\" @change=\"warnbetamode()\">\n          <select>\n            <option>kibana query language</option>\n            <option>free text search</option>\n          </select>\n        </span>\n        </div>\n      </div>\n\n      <div class=\"block\">\n            <div class=\"columns\">\n              <div class=\"column is-one-quarter\">\n              <div class=\"block has-text-left\">\n                  <b-switch @input=\"changetopatientview()\">Patient View </b-switch>\n              </div>\n\n\n              <div class=\"box\">\n                    <div class=\"content has-text-left\">\n                      <h3><strong>Index Name: </strong>{{ index }}</h3>\n                      <h3 v-if=\"patientviewmode\">No of patients: {{ hits }}</h3>\n                      <h3 v-else>No of documents: {{ hits }}</h3>\n                    </div>\n              </div>\n              <div class=\"box\">\n                <div class=\"content has-text-left\">\n                    <h3>Filter by:</h3>\n                  </div>\n                <b-field label=\"Date Range\">\n                  <b-datepicker\n                      placeholder=\"Click to select dates...\"\n                      v-model=\"dates\"\n                      range>\n                  </b-datepicker>\n                </b-field>\n                <b-field label=\"Notetype\">\n                    <b-select v-model=\"notetype\" placeholder=\"Choose...\" expanded>\n                        <option v-for=\"nt in notetypes\" :selected=\"nt == notetype\" :value=\"nt\">{{nt}}</option>\n                    </b-select>\n                </b-field>\n                <!-- <b-field label=\"Notetype\">\n                    <b-input v-model=\"notetype\"></b-input>\n                </b-field> -->\n                <b-field label=\"Document ID\">\n                    <b-input v-model=\"documentId\"></b-input>\n                </b-field>\n                <b-field label=\"Patient\">\n                    <b-input v-model=\"patientId\"></b-input>\n                </b-field>\n                <b-field label=\"Model\">\n                    <b-input v-model=\"model\"></b-input>\n                </b-field>\n                <b-button @click=\"applyFiltering\">Apply</b-button>\n              </div>\n              </div>\n              <div class=\"column\">\n                <div class=\"block\">\n                  <div class=\"card\" v-if=\"freetextmessage!= ''\">\n                    <div class=\"card-content\">\n                      <p class=\"title\" id='freetextmessage'>\n                        {{ freetextmessage }}\n                      </p>\n                    </div>\n                  </div>\n                  <div>\n                    <PatientView v-if=\"patientviewmode\"  :test=\"test\" :searchresults=\"searchresults\" :meta_data=\"meta_data\" :documentlevelannotations=\"documentlevelannotations\" :tokens=\"tokens\" :patientLevelAnnotations=\"patientLevelAnnotations\" :patient=\"patient\"/>  \n                    <DocumentView v-else :test=\"test\" :searchresults=\"searchresults\" :meta_data=\"meta_data\" :documentlevelannotations=\"documentlevelannotations\" :tokens=\"tokens\" />  \n                  </div>\n                </div>\n                \n                <div class=\"block\">\n                  <nav class=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\n                    <a class=\"pagination-previous\" @click=\"paginate(pagination.currentPage - 1)\">Previous</a>\n                    <a class=\"pagination-next\" @click=\"paginate(pagination.currentPage + 1)\">Next</a>\n                    <ul class=\"pagination-list\">\n                        <li><a class=\"pagination-link\" @click=\"paginate(1)\" :class = \"(pagination.currentPage === 1) ? 'is-current':'' \">1</a></li>\n                        <span v-if=\"!pagination.visiblePages.includes(1)\" class=\"pagination-ellipsis\">&hellip;</span>\n                        \n                        <li v-for=\"pageNo in pagination.visiblePages\">\n                          <a v-if=\"pageNo != 1 && pageNo != pagination.noOfPages\" class=\"pagination-link\" :class = \"(pageNo === pagination.currentPage) ? 'is-current':'' \" @click=\"paginate(pageNo)\" >{{pageNo}}</a>\n                        </li>\n\n                        <span v-if=\"!pagination.visiblePages.includes(pagination.noOfPages)\" class=\"pagination-ellipsis\">&hellip;</span>\n                        <li><a class=\"pagination-link\" @click=\"paginate(pagination.noOfPages)\" :class = \"(pagination.noOfPages === pagination.currentPage) ? 'is-current':'' \">{{ pagination.noOfPages }}</a></li>\n                      </li>\n                    </ul>\n                  </nav>\n                </div>\n              </div>\n            </div>\n      </div>\n\n\n    </div>\n \n  </div>\n</template>\n\n<script>\n/*eslint-disable*/\nimport axios from 'axios';\nimport Header from '@/components/Header.vue';\nimport DocumentView from '@/components/DocumentView.vue'\nimport PatientView from './PatientView/PatientView'\nimport 'bulma-extensions/bulma-checkradio/dist/css/bulma-checkradio.min.css'\n\nexport default {\n  name: 'DataSearch',\n\n  components: {\n    Header,\n    DocumentView,\n    PatientView,\n  },\n\n\n  data() {\n    return {\n        searchtext: '',\n        index: '',\n        searchresults: [],\n        meta_data: [],\n        tokens: [],\n        documentlevelannotations: [],\n        hits: 0,\n        freetextmode: false,\n        patientviewmode: false,\n        freetextmessage: '',\n        pagination: {\n          currentPage: 1,\n          visiblePages: [],\n          noOfPages: 1,\n          resultsperpage: 10,\n          noOfVisiblebuttons: 3,\n        },\n        test: 'i am test',\n        currentPatentIdx: 0,\n        patientLevelAnnotations: {},\n        patient: String,\n        root_api: process.env.VUE_APP_URL,\n        dates: [],\n        notetype: '',\n        documentId: '',\n        patientId: '',\n        model: '',\n        notetypes: []\n    };\n  },\n\n  methods: {\n\n      search() {\n        let path = 'http://' + this.root_api + ':5001/searchindex';\n\n        if (this.patientviewmode){\n          this.searchpatientindex();\n\n        } else{\n          this.searchindex();\n        }\n      },\n\n      searchpatientindex(){\n        let path = 'http://' + this.root_api + ':5001/searchindexforpatients';\n\n        this.getNoteTypes();\n\n        axios.post(path, {'searchstring': this.searchtext, 'index': this.index, 'pageNo': this.pagination.currentPage, \n                          'resultsperpage': this.pagination.resultsperpage, 'patient_idx': this.pagination.currentPage - 1,\n                          'start_date': this.getStartDate(), 'end_date': this.getEndDate(), 'notetype': this.notetype,\n                          'document_id': this.documentId, 'patient_id': this.patientId, 'model': this.model},\n                  {headers: {'Authorization': localStorage.getItem('jwt')}})\n        .then((res) => {\n            this.searchresults = res.data.results['hits']\n            this.hits = res.data.no_patients\n            this.meta_data = res.data.meta_data\n            this.tokens = res.data.tokens\n            this.documentlevelannotations = res.data.document_level_annotations\n            this.freetextmessage = res.data.resultmessage\n            this.no_patients = res.data.no_patients\n            this.patient = res.data.patient\n            this.patientLevelAnnotations = res.data.patientLevelAnnotations\n            // set pagination variables\n            this.initialisepagination()\n            \n        })\n        .catch((error) => {\n            console.error(error);\n        }); \n\n      },\n\n\n\n      searchindex() {\n        let path = 'http://' + this.root_api + ':5001/searchindex';\n\n        if (this.freetextmode){\n          path = 'http://' + this.root_api + ':5001/searchindexfreetext';\n\n        }\n\n        this.getNoteTypes();\n\n        axios.post(path,\n                  {\n                    'searchstring': this.searchtext,\n                    'index': this.index,\n                    'pageNo': this.pagination.currentPage,\n                    'resultsperpage': this.pagination.resultsperpage,\n                    'start_date': this.getStartDate(),\n                    'end_date': this.getEndDate(),\n                    'notetype': this.notetype,\n                    'document_id': this.documentId,\n                    'patient_id': this.patientId,\n                    'model': this.model\n                  },\n                  {headers: {'Authorization': localStorage.getItem('jwt')}})\n        .then((res) => {\n            this.searchresults = res.data.results['hits']\n            this.hits = res.data.hits\n            this.meta_data = res.data.meta_data\n            this.tokens = res.data.tokens\n            this.documentlevelannotations = res.data.document_level_annotations\n            this.freetextmessage = res.data.resultmessage\n            \n            // set pagination variables\n            this.initialisepagination()\n            \n        })\n        .catch((error) => {\n            console.error(error);\n        });       \n      },\n\n      changetopatientview() {\n        this.patientviewmode = !this.patientviewmode\n        this.search()\n      },\n\n      warnbetamode() {\n        this.freetextmode = !this.freetextmode\n        alert('experimental feature')\n      },\n\n      initialisepagination() {\n\n            if (this.patientviewmode){\n              this.pagination.noOfPages = this.hits\n            } else{\n              this.pagination.noOfPages = Math.ceil(this.hits / this.pagination.resultsperpage)\n            }\n            this.pagination.visiblePages = []\n\n            for (let i = -1 ; i < Math.min(this.pagination.noOfVisiblebuttons, this.pagination.noOfPages) - 1; i++){\n              if (this.pagination.currentPage === 1){\n                if (i === -1){\n                  continue\n                }\n                else{\n                  this.pagination.visiblePages.push(this.pagination.currentPage + i);\n                }\n              } \n              else if (this.pagination.currentPage === this.pagination.noOfPages) {\n                if (i === -1){\n                  continue\n                }\n                else{\n                  this.pagination.visiblePages.unshift(this.pagination.currentPage - i);\n                }\n              }\n              else {\n                this.pagination.visiblePages.push(this.pagination.currentPage + i)\n              }\n              console.log(this.pagination.visiblePages, i)\n            }\n      },\n\n      paginate(newpageNo) {\n        if (newpageNo < 1 || newpageNo > this.pagination.noOfPages){\n          return\n        }\n        this.pagination.currentPage = newpageNo\n        if (this.patientviewmode){\n          this.searchpatientindex();\n        } else{\n          this.searchindex();\n        }\n      },\n\n      applyFiltering() {\n        if (this.patientviewmode) {\n          this.searchpatientindex();\n        } else{\n          this.searchindex();\n        }\n      },\n\n      getStartDate() {\n        let start_date = '01/01/1970';\n        if (this.dates !== undefined && this.dates.length > 0) {\n          start_date = ('0' + this.dates[0].getDate()).slice(-2) + '/' + ('0' + (this.dates[0].getMonth() + 1)).slice(-2) + '/' + this.dates[0].getFullYear();\n        }\n\n        return start_date;\n      },\n\n      getEndDate() {\n        let end_date = '31/12/2999';\n        if (this.dates !== undefined && this.dates.length > 1) {\n          end_date = ('0' + this.dates[1].getDate()).slice(-2) + '/' + ('0' + (this.dates[1].getMonth() + 1)).slice(-2) + '/' + this.dates[1].getFullYear();\n        }\n\n        return end_date;\n      },\n\n      getNoteTypes() {\n        let path = 'http://' + this.root_api + ':5001/fetchnotetypes?index=' + this.index;\n\n        axios.get(path,\n                  {headers: {'Authorization': localStorage.getItem('jwt')}})\n        .then((res) => {\n            this.notetypes = res.data;\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n      }\n  },\n\n  created() {\n    this.index = this.$route.params.index;\n    this.searchindex();\n  },\n\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped > \ndiv.container {\n      margin-top: 30px;\n    }\ndiv.card {\n  margin-bottom: 15px;\n}\n\nspan.chosen:hover {\n  text-decoration: none;\n  cursor: pointer;\n}\n\nlabel.unselectable {\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n</style>\n\n<style lang=\"sass\" scoped>\n\n</style>\n"]}]}